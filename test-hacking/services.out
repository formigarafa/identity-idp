
Randomized with seed 11146

DocumentCaptureSessionAsyncResult
  attention_with_barcode?
    is expected to eq false
    with complete result
      is expected to eq false
      with attention with barcode result
        is expected to eq true
  success?
    with incomplete result
      is false
    with complete result
      with successful result
        is true
      with unsuccessful result
        is false

Db::SpReturnLog
  #create_return
    does not fail if row already exists

Proofing::Mock::DdpMockClient
  .optional_attributes
    has the same optional_attributes as the real proofer
  .stage
    has the same stage as the real proofer
  .required_attributes
    has the same required_attributes as the real proofer
  #proof
    with reject
      has a reject status
    with explicit no_result
      has a nil review status
    with pass
      has a pass status

Db::MonthlySpAuthCount::TotalMonthlyAuthCounts
  is empty
  returns the total auth counts

EventDisavowal::DisavowEvent
  #call
    sets disavowed_at

Encryption::KmsLogger
  .logger
    is a logger
  .log
    with a context
      logs the context
    without a context
      logs that an encryption happened without a context

ReactivateAccountSession
  #suspend
    sets the reactivate account object back to its defaults
  #start
    sets the session object `active` flag to true
  #decrypted_pii
    returns nil as a default
    returns the pii stored in the session
  #store_decrypted_pii
    stores the supplied object in the session and toggles `validated_personal_key` flag
  #started?
    returns a boolean if the account reactivate flow has started or not
    initializes set to false
  #validated_personal_key?
    defaults to false
    returns a boolean indicating if the user hsa validated their personal key
  #clear
    deletes the reactivate account session object from user_session

ActiveProfileEncryptor
  #call
    encrypts the profile

HealthCheckSummary
  #as_json
    is the JSON representation
  #healthy?
    is healthy

Proofing::LexisNexis::VerificationErrorParser
  #parsed_errors
    should return an array of errors from the response

DocAuth::Response
  #merge
    returns merged instance
    does not mutate the original instance
    pii_from_doc
      merges pii from doc
    success
      both success
        results in true
      one failure
        results in false
      both failure
        results in false
    attention_with_barcode?
      is expected to eq false
      with own attention with barcode
        is expected to eq true
      with other attention with barcode
        is expected to eq true
    exception
      own exception
        results in exception
      other exception
        results in exception
      no exception
        results in no exception
    errors
      merges errors
  #attention_with_barcode?
    returns false
  #to_h
    pii from doc present
      does not include pii from doc

PushNotification::AccountPurgedEvent
  #event_type
    is the RISC event type
  #payload
    is a subject with the provided iss_sub

Db::MonthlySpAuthCount::TotalMonthlyAuthCountsWithinIaaWindow
  .call
    is empty with no data
    with data
      counts and uniques auths
    with only partial months
      counts and uniques auths
    when the SP does not have IAA start/end dates
      skips and returns an empty array

UserSeeder
  .run
    raises the appropriate error when running in staging
    raises the appropriate error when running in prod
    defaults to the value in Identity::Hostdata.env
    with valid inputs
      saves the credentials to a CSV
      creates verified users
      creates the right number of users
      returns the number of users created
    when an email address is already taken
      does not persist any users
      raises the appropriate error
  .new
    raises the appropriate error with invalid CSV file
    raises the appropriate error with missing CSV file
    raises the appropriate error with invalid email domain

Idv::CancelVerificationAttempt
  the user has a pending profile and an active profile
    deactivates the pending profile
  the user has a pending profile
    deactivates the profile
  when there are pending profiles for other users
    only updates profiles for the specificed user
  the user has multiple pending profiles
    deactivates both profiles

KeyRotator::AttributeEncryption
  #rotate
    re-encrypts email and phone
    does not change the `updated_at` timestamp

IrsAttemptsApi::AttemptEvent
  #to_jwe
    returns a JWE for the event
  .from_jwe
    returns an event decrypted from the JWE

Idv::Steps::InPerson::VerifyWaitStepShow
  #call
    adds costs
    clears pii from session
    moves to the next page
    when verification fails
      marks the verify step incomplete and redirects to the warning page
    when there is no document capture session ID
      returns to the verify page
    when verification encounters an exception
      marks the verify step incomplete and redirects to the exception page
    when there is no document capture session
      deletes the document capture session and returns to the verify page
    when the proofing session result is missing
      deletes the document capture session and returns to the verify page

PushNotification::ReproofCompletedEvent
  #event_type
    is the RISC event type
  #payload
    is a subject with the provided iss_sub

Agreements::PartnerAccountSeeder
  .run
    creates new records if none exist
    updates a record if one exists
    with bad association
      raises the appropriate error

DeletedAccountsReport
  #call
    prints the report with one record
    prints the report with zero records when the last auth date is beyond days ago
    prints the report with zero records when it is not the correct sp
    prints the report with zero records when no users are deleted
    prints the report with zero records when no users or identities

Proofing::LexisNexis::PhoneFinder::VerificationRequest
  behaves like a lexisnexis request
    #http_headers
      contains the content type
    #send
      includes the basic auth header
      returns a response object initialized with the http response
  #body
    returns a properly formed request body
    without a uuid_prefix
      does not prepend
  #url
    returns a url for the Phone Finder endpoint

IrsAttemptsApi::RedisClient
  #read_events
    reads the event events from redis
    stores events in hourly buckets
  #write_event
    writes the attempt data to redis with the event key as the key

DocAuth::Acuant::Request
  #fetch
    when the request resolves with a non 200 status
      returns a response with an exception
    when the request resolves with retriable error then succeeds it only retries once
      calls NewRelic::Agent.notice_error each retry
    when the request times out
      returns a response with a timeout message and exception and notifies NewRelic
    when the request resolves with a 200
      calls handle_http_response on the subclass
    when the request resolves with a handled http error status
      it produces a 439 error
      it produces a 440 error
      it produces a 438 error
    when the request resolves with a 404 status it retries
      calls NewRelic::Agent.notice_error each retry
    when the request is a post instead of a get
      sends a post request with a request body

Throttle
  #increment!
    increments attempts
  #reset
    resets attempt count to 0
  .max_attempts
    returns configured attempt window for throttle type
    is indifferent to throttle type stringiness
  #throttled_else_increment?
    throttle has not hit limit
      increments the throttle
      is false
    throttle has hit limit
      is true
  #expires_at
    with expired throttle
      returns expiration time
    with active throttle
      returns expiration time
    without having attempted
      returns current time
  #throttled?
    returns false if the attempts <= max_attempts but the window is expired
    returns true if throttled
    returns false if the attempts < max_attempts
  #remaining_count
    returns maximium remaining attempts with zero attempts
    returns zero when throttle limit is reached
  .attempt_window_in_minutes
    returns configured attempt window for throttle type
    is indifferent to throttle type stringiness
  .new
    throws an error for an invalid throttle_type
    throws an error when neither user nor target are provided
    throws an error when both user and target are provided
    when target is a string
      target is not a string
        raises an error

Pii::Attributes
  #==
    treats objects with same values as equal
  #new_from_json
    returns all-nil object when passed blank JSON
    inflates from JSON string
  #new_from_hash
    ignores unknown keys
    initializes from plain Hash
    initializes from complex Hash
    assigns to all members

Agreements::IaaOrderSeeder
  .run
    updates a record if one exists
    raises the appropriate error message if the integration issuer is invalid
    creates new IntegrationUsages if none exist
    creates new IaaOrders if none exist

Db::Identity::SpUserCounts
  returns the total user counts per sp broken down by ial1 and ial2
  is empty

Pii::Fingerprinter
  #verify_current
    returns true for identical fingerprints
    returns false for unequal fingerprints
  #verify
    returns true for old key
    returns true for identical fingerprints
    returns false for unequal fingerprints
  #verify_queue
    returns true for old key
    returns false for unequal fingerprints
  #stale?
    returns true if the fingerprint is nil and the text is not
    return false if hashed with current key
    returns true if hashed with old key
  #fingerprint
    returns a 256 bit string

Encryption::UserAccessKey
  .new
    allows creation of a uak using password and salt
    allows creation of a uak using an scrypt hash
    with a legacy password with a 20 byte salt
      can successfully create a uak using the password and the salt
  #unlock
    derives random_r from the encryption key and sets the cek and encrypted password
  #build
    assigns random_r and calculates the cek, encryption_key, and encrypted_password
  #unlocked?
    with an initialized key
      returns false
    with an unlocked key
      returns true
    with a built key
      returns true

SpReturnUrlResolver
  #failure_to_proof_url
    return the failure to proof url if one is registered
    returns the return to sp url if no failure to proof url is registered
    returns the returns to sp url if the failure to proof url is an empty string
  #return_sp_url
    for an SP without a redirect URI in the request URL
      returns the return URL specified in the config
    for an SP with a redirect URI in the request URL
      returns the redirect URI with error params and state
      does not return the redirect URI if it is not in the SP redirect uri list
    for an SP without a redirect URI or return URL in the config
      returns the first redirect URI without a path for an OIDC SP
      returns the ACS URL without a path for a SAML SP
  #homepage_url
    returns nil
    with return to sp url
      return return to sp url

ServiceProviderSeeder
  #run
    inserts service providers into the database from service_providers.yml
    updates the plural certs column with the PEM content of certs
    when a service provider already exists in the database
      updates the attributes based on the current value of the yml file
    with other existing service providers in the database
      sets approved, active and native on service providers from the yaml
      does not change approve, active and native on the other existing service providers
    when there is a syntax error in the service_provider.yml config file
      re-raises the error
      logs the error
    when the rails environment is not in the service_provider.yml config file
      logs the error
      re-raises the error
    when running in a production environment
      in another environment
        does not send New Relic an error if the DB has an SP not in the config
      when a service provider is invalid
        raises an error
      in the staging environment
        only writes configs with restrict_to_deploy_env for that env, or no restrictions
        sends New Relic an error if the DB has an SP not in the config
      in prod
        sends New Relic an error if the DB has an SP not in the config
        only writes configs with restrict_to_deploy_env for prod

UserSessionContext
  .reauthentication_context?
    returns true when context is reauthn context
    returns false when context is default context
  .confirmation_context?
    returns true when context is confirmation context
    returns false when context is default or reauth context
  .authentication_context?
    returns false when context is not default context
    returns true when context is default context
  .authentication_or_reauthentication_context?
    returns true when context is default or reauth context
    returns false when context is confirmation context

AccountReset::NotifyUserOfRequestCancellation
  #call
    sends an email to all of the user email addresses
    sends a text to all of the user phone numbers

Idv::Steps::InPerson::AddressStep
  #call
    with values submitted
      sets values in flow session

OutboundHealthChecker
  #check
    timeout from endpoint
      notifies newrelic
      is not healthy after 2 retries
      retries and is healthy if the second request succeeds
    connection fails to endpoint
      is not healthy after 2 retries
      notifies newrelic
      retries and is healthy if the second request succeeds
    bad config
      is not healthy
    successful connection to endpoint
      400 response from endpoint
        is not healthy
        notifies newrelic
      300 response from endpoint
        is healthy
      500 response from endpoint
        is not healthy
        notifies newrelic
      200 response from endpoint
        is healthy

Idv::InPersonConfig
  .enabled_for_issuer?
    is expected to eq false
    with in person proofing enabled
      is expected to eq true
      with idv sp required
        is expected to eq false
      with issuer argument
        issuer does not exist
          is expected to eq false
        issuer has in-person proofing enabled
          is expected to eq true
        issuer has in-person proofing disabled
          is expected to eq false
  .enabled_without_issuer?
    is expected to eq true
    with idv sp required
      is expected to eq false
  .enabled?
    is expected to eq false
    with in person proofing enabled
      is expected to eq true

Idv::Session
  #respond_to_missing?
    disallows un-supported attributes
    allows supported attributes
  #method_missing
    allows supported attributes
    disallows un-supported attributes
  #initialize
    with idv user session
      does not initialize user session
    without idv user session
      initializes user session
    with empty idv user session
      does not initialize user session
  #phone_confirmed?
    returns false if the vendor has not confirmed the phone
    returns false if neither the user nor the vendor has confirmed the phone
    returns false if the user has not confirmed the phone
    returns true if the user and vendor have confirmed the phone
  #create_profile_from_applicant_with_password
    with phone verifed by vendor
      completes the profile if the user has completed OTP phone confirmation
      does not complete the profile if the user has not completed OTP phone confirmation
      with establishing in person enrollment
        sets profile to pending in person verification
        creates a USPS enrollment
    without a confirmed phone number
      does not complete the user profile
    with gpo address verification
      sets profile to pending gpo verification
  #address_mechanism_chosen?
    returns false if the user has not selected phone or gpo address verification
    returns true if the user has selected gpo address verification
    phone verification chosen
      returns false if the vendor has not confirmed the phone number
      returns true if the vendor has confirmed the phone number

SamlRequestValidator
  #call
    unsupported authn context without step up and valid sp and nameID format
      returns FormResponse with success: false for unknown authn context
    invalid authn context and valid sp and authorized nameID format
      returns FormResponse with success: false for ial2 on an ial:1 sp
      returns FormResponse with success: false for unknown authn context
    valid authn context and sp and unauthorized nameID format
      returns FormResponse with success: false with unauthorized nameid format
    invalid authn context and invalid sp and authorized nameID format
      returns FormResponse with success: false
    valid authn context and invalid sp and authorized nameID format
      returns FormResponse with success: false
    valid authn context and sp and authorized nameID format
      returns FormResponse with success: true
    valid authn context and unauthorized nameid format
      returns FormResponse with success: false
    unsupported authn context with step up and valid sp and nameID format
      returns a FormResponse with success: true for Comparison=minimum
      returns a FormResponse with success: true for Comparison=better
    valid authn context and authorized email nameid format for SP
      returns FormResponse with success: true
      returns FormResponse with success: true for ial2 on ial:2 sp

Idv::Steps::InPerson::SsnStep
  #call
    merges ssn into pii session value
    with service provider device profiling enabled
      with proofing device profiling collecting disabled
        still adds a session id to flow session
    with existing session applicant
      clears applicant
    with service provider device profiling enabled
      with proofing device profiling collecting enabled
        does not change threatmetrix_session_id when updating ssn
        adds a session id to flow session
    with service provider device profiling disabled
      with proofing device profiling collecting disabled
        does not add a session id to flow session
    with service provider device profiling disabled
      with proofing device profiling collecting enabled
        does not add a session id to flow session
        does not change threatmetrix_session_id when updating ssn

Idv::Steps::WelcomeStep
  #call
    without camera
      redirects to no camera error page
    with previous establishing in-person enrollments
      cancels all previous establishing enrollments

CalendarService
  instance methods
    #observed_holiday?
      when its a holiday
        is expected to eq true
      when its not a holiday
        is expected to eq false
    #observed
      when date is a Sunday
        returns the day after
      when date is a weekday
        returns the day
      when date is a Saturday
        returns the day before
    #observed_holidays
      is expected to eq [Mon, 01 Jan 2018, Mon, 15 Jan 2018, Mon, 19 Feb 2018, Mon, 28 May 2018, Tue, 19 Jun 2018, Wed, 04 Jul 2018, Mon, 03 Sep 2018, Mon, 08 Oct 2018, Mon, 12 Nov 2018, Thu, 22 Nov 2018, Tue, 25 Dec 2018]
      when the next NY is on a Saturday
        includes Dec 31st
    #holidays
      is expected to eq [Mon, 01 Jan 2018, Mon, 15 Jan 2018, Mon, 19 Feb 2018, Mon, 28 May 2018, Tue, 19 Jun 2018, Wed, 04 Jul 2018, Mon, 03 Sep 2018, Mon, 08 Oct 2018, Sun, 11 Nov 2018, Thu, 22 Nov 2018, Tue, 25 Dec 2018]
    #holiday?
      when its a holiday
        is expected to eq true
      when its not a holiday
        is expected to eq false
  class methods
    .weekend?
      returns false for weekdays
      returns true for weekends
    .observed_holiday?
      when its not a holiday
        is expected to eq false
      when its a holiday
        is expected to eq true
    .weekend_or_holiday?
      returns false for weekdays
      returns true for weekends
      returns true for holidays on a weekday
    .holiday?
      when its a holiday
        is expected to eq true
      when its not a holiday
        is expected to eq false

GpoConfirmationMaker
  #otp
    filters out profane words
    should return a normalized, 10 digit code
  with a nil zipcode
    #perform
      accepts the zipcode
  with a (bogus) zip+1 zipcode
    #perform
      strips the +0 from the zipcode
  #perform
    should create a GpoConfirmation with the encrypted attributes
    should create a GpoConfirmationCode with the profile and the encrypted OTP

DocAuth::Acuant::Requests::CreateDocumentRequest
  #fetch
    upload image source
      sends a well formed request and returns a response with the instance ID
    acuant sdk image source
      sends a well formed request and returns a response with the instance ID

PushNotification::PasswordResetEvent
  #event_type
    is the RISC event type
  #payload
    is a subject with the provided iss_sub

Agreements::PartnerAccountStatusSeeder
  .run
    updates a record if one exists
    creates new records if none exist
    with bad file
      raises the appropriate error

RedisRateLimiter
  #attempt!
    calls the block when the limit has not been hit
    raises an error and does not run the block when the limit has been hit
  #maxed?
    when the key exists and is under the limit
      is false
    when the key exists and is at the limit
      is true
    when the key does not exist in redis
      is false
  #increment
    sets the TTL of the key to interval minus 1
    when the key exists in redis
      increments the value
    when the key does not exist in redis
      sets the value to 1 when

MultiHealthChecker
  #check
    with a single unhealthy checker
      returns a healthy result
    with all healthy checkers
      returns a healthy result
      returns a JSON-ready summary

Idv::Steps::VerifyStep
  #call
    sets uuid_prefix on pii_from_doc
    passes the X-Amzn-Trace-Id to the proofer
    when pii_from_doc is not present
      marks step as incomplete
    when different users use the same SSN within the same timeframe
      throttles them all

PwnedPasswords::LookupPassword
  #call
    returns true for pwned passwords
    returns false for non pwned passwords

IrsAttemptsApi::EnvelopeEncryptor
  .encrypt
    filename includes digest and truncated timestamp
    returns encrypted result
  .formatted_timestamp
    formats according to the specification
  .decrypt
    returns decrypted text

DocAuth::LexisNexis::Responses::TrueIdResponse
  when response is not a success
    produces appropriate errors without liveness
    produces expected hash output
    returns Failed for visible_pattern when it gets passed and failed value
  #attention_with_barcode?
    is expected to eq false
    with single barcode attention error
      is expected to eq true
    with multiple errors including barcode attention
      is expected to eq false
  #parse_date
    handles a day past the end of the month
    handles an invalid month
    handles an invalid leap day
  when the barcode can not be read
    includes expiration
    has PII data
    includes issued date
    has no error messages
    has extra attributes
    is a successful result
  #billed?
    with doc auth result of Passed
      is expected to eq true
    with no doc auth result
      is expected to eq false
    with doc auth result of Attention
      is expected to eq true
    with doc auth result of Unknown
      is expected to eq true
  when front image HDPI is too low
    returns an unsuccessful response with front DPI error
  when the response is a success
    has PII data
    excludes unnecessary raw Alert data from logging
    has extra attributes
    is a successful result
    has no error messages
    includes issued date
    excludes pii fields from logging
    includes expiration
    produces expected hash output
  when response is unexpected
    produces reasonable output for a malformed TrueID response
    produces reasonable output for communications error
    produces reasonable output for internal application error
    is not billed
    produces reasonable output for a TrueID failure without details
  when the dob is incorrectly parsed
    does not throw an exception when getting pii from doc

Idv::AnalyticsEventsEnhancer
  includes decorated methods
  calls analytics method with original and decorated attributes
  with proofing component
    calls analytics method with original and decorated attributes
  with anonymous analytics user
    calls analytics method with original and decorated attributes

EventDisavowal::ValidateDisavowedEvent
  #call
    it has been more than 10 days since the event occured
      returns an unsuccessful response
    the event is nil
      returns an unsuccessful response
    the event is valid
      returns a successful response
    the event is already disavowed
      returns an unsuccessful response

Proofing::Aamva::Request::VerificationRequest
  #headers
    should return valid SOAP headers
  #send
    when the request is successful
      returns a response object
    when the connection fails
      raises an error
    when the request times out
      raises an error
  #body
    should be a request body
    should escape XML in applicant data
    includes an address line 2 if one is present
  #url
    should be the AAMVA verification url from the params
  South Carolina id number padding
    id is less than 8 digits
      zero-pads the id to 8 digits
    id is greater than 8 digits
      passes the id through as is

IrsAttemptsApi::Tracker
  #track_event
    does not store events in plaintext in redis
    omit failure reason when failure_reason is blank
    should not omit failure reason when success is false and failure_reason is not blank
    records the event in redis
    omit failure reason when success is true
    the current session is not an IRS attempt API session
      still logs metadata about the event
      does not record any events in redis
    metadata logging is disabled
      does not log metadata about the event
    without a service provider
      still logs metadata about the event
    the IRS attempts API is not enabled
      still logs metadata about the event
      does not record any events in redis
  #parse_failure_reason
    parses failure_reason from errors when no error_details present
    parses failure_reason from error_details

Idv::Agent
  instance
    #proof_address
      fails to proof addresses with invalid information
      proofs addresses successfully with valid information
    #proof_resolution
      returns an unsuccessful result and notifies exception trackers if an exception occurs
      proofing state_id enabled
        does proof state_id if resolution succeeds
        still proofs state_id if resolution fails
      proofing state_id disabled
        does not proof state_id if resolution succeeds
        does not proof state_id if resolution fails
        returns a successful result if SSN does not start with 900 but is in SSN allowlist

Agreements::IntegrationSeeder
  .run
    creates new records if none exist
    updates a record if one exists

Idv::DataUrlImage
  #content_type
    returns the content type
  #initialize
    with bad data
      raises an error
  #read
    returns the data associated with the image
    with base64-encoded content
      returns the data associated with the image

GpoConfirmationUploader
  #run
    when there is an error
      notifies NewRelic and does not clear confirmations if SFTP fails
    when successful
      uploads the psv, creates a file, uploads it via SFTP, and deletes and logs it after
  #upload_export
    uploads the export via sftp
    does not upload when GPO upload is disabled
  #clear_confirmations
    deletes the provided confirmations
  #generate_export
    generates an export using the GpoConfirmationExporter and all current GpoConfirmations

Encryption::Encryptors::PiiEncryptor
  #decrypt
    requires the same password used for encrypt
    uses layered AES and KMS to decrypt the contents
    returns the original text
  Encryption::Encryptors::PiiEncryptor::Ciphertext
    .parse_from_string
      does not blow up with unknown/new keys
  #encrypt
    returns encrypted text
    uses layers KMS and AES to encrypt the plaintext

UspsInPersonProofing::Proofer
  #request_facilities
    returns facilities
  #request_proofing_results
    returns in-progress enrollment information
    returns passed enrollment information
    returns failed enrollment information
  #request_enroll
    returns enrollment information
    returns 400 error
    returns 500 error
  #request_enrollment_code
    returns enrollment information
  #request_pilot_facilities
    returns facilities
  #retrieve_token!
    calls the endpoint with the expected params
    sets token and token_expires_at

PivCac::CheckConfig
  non-production environments
    does not raise an error
  production environments
    non-https config
      does raise an error
    https config
      does not raise an error

Encryption::UakPasswordVerifier
  .digest
    creates a digest from the password
  .verify
    returns false for nonsese
    returns false if the password does not match
    returns true if the password matches
    allows verification of a legacy password with a 20 byte salt
  Encryption::UakPasswordVerifier::PasswordDigest
    .parse_from_string
      raises an encryption error when the password digest is nil
      does not blow up with unknown/new keys

Encryption::ContextlessKmsClient
  with kms plaintext greater than 4k
    #encrypt
      logs the encryption
      with KMS enabled
        uses KMS to encrypt the plaintext
      without KMS enabled
        uses the password pepper to encrypt the plaintext and signs it
    #decrypt
      logs the decryption
      without KMS enabled
        uses the password pepper to decrypt a ciphertext
      with KMS enabled
        uses KMS to decrypt a ciphertext encrypted with KMS
        uses the password pepper to decrypt a legacy ciphertext encrypted without KMS
    #looks_like_kms?
      returns false for non kms encrypted data
      returns true for kms encrypted data
  with kms plaintext less than 4k
    #looks_like_kms?
      returns true for kms encrypted data
      returns false for non kms encrypted data
    #decrypt
      without KMS enabled
        uses the password pepper to decrypt a ciphertext
      with KMS enabled
        uses the password pepper to decrypt a legacy ciphertext encrypted without KMS
        uses KMS to decrypt a ciphertext encrypted with KMS
    #encrypt
      without KMS enabled
        uses the password pepper to encrypt the plaintext and signs it
      with KMS enabled
        uses KMS to encrypt the plaintext

Idv::Steps::InPerson::StateIdStep
  #extra_view_variables
    first name and dob are set
      returns extra view variables
    dob is set
      returns extra view variables
    first name is set
      returns extra view variables
  #call
    with values submitted
      sets values in flow session
      receives hash dob
        converts the date when setting it in flow session

DatabaseHealthChecker
  .check
    when the database is healthy
      returns a healthy check
    when the database is unhealthy
      notifies NewRelic
      returns an unhealthy check

Proofing::Result
  #timed_out?
    when there is a generic error
      is expected to eq false
    when there is a timeout error
      is expected to eq true
    when there is no error
      is expected to eq false
  transaction_id
    when provided
      is present
  #success?
    when there is no error and no exception
      is expected to eq true
    when there is an error AND an exception
      is expected to eq false
    when there is an error and no exception
      is expected to eq false
  #add_error
    with no key
      behaves like add_error
        returns itself
        adds an error under the key
        does not add duplicate error
    with a key
      behaves like add_error
        adds an error under the key
        does not add duplicate error
        returns itself
  #failed?
    when there is no error
      is expected to eq false
    when there is an error AND an exception
      is expected to eq false
    when there is an error and no exception
      is expected to eq true
  reference
    when provided
      is present
  context
    when provided
      is present
  #exception?
    when there is no exception
      is expected to eq false
    when there is an exception
      is expected to eq true

UspsInPersonProofing::EnrollmentHelper
  #schedule_in_person_enrollment
    an establishing enrollment record exists for the user
      updates the existing enrollment record
      sends verification emails
      creates usps enrollment
      sets enrollment status to pending and sets established at date and unique id
      when the enrollment does not have a unique ID
        uses the deprecated InPersonEnrollment#usps_unique_id value to create the enrollment
    when in-person mocking is enabled
      uses a mock proofer

Proofing::Aamva::AuthenticationClient
  #fetch_token
    should use the token mutex
    when the auth token is nil
      should send an authentication request then save and return the token
    when the auth token is present and fresh
      should return the auth token
    when the auth token is present and expired
      should send an authentication request then save and return the token

ProfanityDetector
  .profane?
    detects profanity split by dashes
    is false for benign words
    detects profanity inside words
    detects profanity
    detects profanity across upper/lower case
  .without_profanity
    has a limit to guard against bad random generators
    keeps executing a block until it does not return something profane

DocAuth::Acuant::Responses::GetResultsResponse
  when there are errors and still parsed PII fields
    is not sucessful, has errors, and still has pii_from_doc
  #attention_with_barcode?
    is expected to eq false
    with single barcode attention error
      is expected to eq true
    with multiple errors including barcode attention
      is expected to eq false
  with a successful result
    returns a successful response with no errors
    parsed PII from the doc
  with an attention result
    when there are other unsuccessful alerts
      is not a successful result
    when the only unsuccessful alert is attention barcode could not be read
      is a successful result
  with a failed result
    returns an unsuccessful response with errors
    when there are alerts with success result codes
      does not return errors for alerts with success result codes
    when visiual_pattern passes and fails
      returns log_alert_results for visible_pattern with multiple results comma separated
    when front image HDPI is too low
      returns an unsuccessful response with front DPI error
    when multiple alerts have the same friendly error
      only returns one copy of the each error
    when with an acuant error message
      returns the untranslated error

Idv::ProofingComponentsLogging
  #as_json
    returns hash with nil values omitted

Encryption::MultiRegionKmsClient
  #encrypt
    with multi region enabled
      encrypts with KMS
    with multi region disabled
      encrypts with KMS
  #decrypt
    errors if none of the encryption regions are present
    decrypts successfully if only one of the encryption regions is valid
    decrypts in default region where multiple regions present
    decrypts successfully if the default region is not present
    with a multi region ciphertext
      decrypts the ciphertext with KMS
    with a legacy ciphertext
      decrypts the ciphertext with KMS

DateParser
  .parse_legacy
    it passes through date objects
      is the date
    single digit american date month and year
      is expected to eq Sun, 01 Feb 1970
    with something that is not a date
      blows up
    with an international style date
      is expected to eq Thu, 31 Dec 1970
    with an american style date
      is expected to eq Thu, 31 Dec 1970

Idv::InheritedProofing::ServiceProviderForms
  #inherited_proofing_form_for
    when the inherited proofing request cannot be identified
      raises an error
    when there is a va inherited proofing request
      returns the correct form

Encryption::Encryptors::AesEncryptor
  #decrypt
    requires same password used for encrypt
    returns original text
  #encrypt
    returns encrypted text

Idv::InheritedProofing::ServiceProviderServices
  #inherited_proofing_service_for
    when there is a va inherited proofing request
      when va mock proofing is turned on
        returns the correct service provider service class
      when va mock proofing is turned off
        returns the correct service provider service class
  #inherited_proofing_service_class_for
    when there is a va inherited proofing request
      when va mock proofing is turned on
        returns the correct service provider service class
      when va mock proofing is turned off
        returns the correct service provider service class
    when va inherited proofing is disabled
      raises an error
    when the inherited proofing class cannot be identified
      raises an error

DurationParser
  #valid?
    with an empty value
      is valid
    with a bad value
      is not valid
    with a real value
      is valid
  #parse
    with a format in days
      parses the value as a number of days
    with a bad format (aaa)
      is not valid
    with a format in months
      parses the value as a number of 30-day months
    with a bad format (123x)
      is not valid
    with a format in years
      parses the value as a number of 365-day years
    with a format in weeks
      parses the value as a number of 7-day weeks
    with a bad format (1 d)
      is not valid

EventDisavowal::FindDisavowedEvent
  #call
    an event does not exist
      returns nil
    an event exists
      returns the event
    an event exists with a disavowal token fingerprinted with an old key
      returns the event

GpoConfirmation
  #entry
    retrieves the entry as an unencrypted hash with symbolized keys
    stores the entry as an encrypted json string

Proofing::LexisNexis::Ddp::Proofer
  #proof
    when the response is a full match
      is a successful result
    when the response raises an exception
      returns an exception result
  #send
    when the request times out
      raises a timeout error
    when the request is made
      it looks like the right request

IdentityLinker
  #link_identity
    updates user's last authenticated identity
    can take an additional optional attributes
    does not link to an identity record if the provider is nil
    rejects bad attributes names
    can link two different clients to the same rails_session_id
    identity.last_consented_at
      does override a previous last_consented_at by default
      updates last_consented_at when present
    clear_deleted_at
      clear_deleted_at is true
        nulls out deleted_at
      clear_deleted_at is nil
        nulls out deleted_at

AgencySeeder
  #run
    updates existing agencies based on the current value of the yml file
    inserts agencies in the proper order from agencies.yml
    inserts agencies into the database from agencies.yml

GpoDailyTestSender
  #otp_from_date
    formats the date as a 10-digit OTP
  #run
    creates a GPO confirmation and code for the current date
    when attempting handle the designated reciver renders an error
      warns and does not blow up (so the calling job can continue normally)
      does not create gpo records

Idv::DuplicateSsnFinder
  #ssn_is_unique?
    when ssn is already taken by same profile
      recognizes fingerprint regardless of HMAC key age
      is valid
    when the ssn is unique
      is expected to eq true
    when ssn is already taken by another profile
      returns false
      recognizes fingerprint regardless of HMAC key age

Db::AddDocumentVerificationAndSelfieCosts
  has costing for front, back, and result when billed
  has costing for front, back, but not result when not billed

UserAlerts::AlertUserAboutPersonalKeySignIn
  #call
    sends sms and emails to confirmed addresses

Agreements::IntegrationStatusSeeder
  .run
    creates new records if none exist
    updates a record if one exists

Proofing::Aamva::Response::VerificationResponse
  #success?
    when required attributes are missing
      is expected to eq false
    when all attributes are verified
      is expected to eq true
    when required attributes are verified
      is expected to eq true
      with a namespaced XML response
        is expected to eq true
    when required attributes are not verified
      is expected to eq false
  #reasons
    when all attributes are verified
      returns an empty array
      with a namespaced XML body
        returns an empty array
    when required attributes are not verified
      returns an array with the reasons verification failed
      with a namespaced XML response
        returns an array with the reasons verification failed
    when required attributes are verified
      returns an empty array
  #verification_results
    when all attributes are verified
      returns a hash of values that were verified
    when not all attributes are verified
      returns a hash of values that were verified and values that were not
  #transaction_locator_id
    is the TransactionLocatorID from the response
    with a namespaced XML failure response
      is the value from the response
    with a namespaced XML response
      is the value from the response
    when there is no TransactionLocatorID
      is nil
  #initialize
    with a non-200 status code
      raises a VerificationError
    when the API response has an error
      raises a VerificationError

EmailConfirmationTokenValidator
  #email_address_already_confirmed_by_user?
    the email address was confirmed by a different user
      is expected to eq false
    the email address was confirmed by the user
      is expected to eq true
  #submit
    the email address does not exist
      returns an unsuccessful result
    the email address exists and is already confirmed
      returns an unsuccessful result
    the email address exists and the token is not expired
      returns a successful result
    the email address exists and the token is expired
      returns an unsuccessful result
    the email of the user does not match the user confirming
      returns an unsucessful result

X509::Attribute
  delegation
    delegates to raw

Proofing::LexisNexis::InstantVerify::Proofer
  behaves like a lexisnexis proofer
    #proof_applicant
      when proofing succeeds
        results in a successful result
      when proofing fails
        results in an unsuccessful result
  #proof
    when the response is a full match
      is a successful result
    when the response is a not a full match
      is a failure result
    when an error is raised
      returns a result with an exception
    proofing failures that allow additional verification
      and attribute requires additional verification
        returns a result that identifies attribute as needing verification
      the result fails for a reason other than a failure to match attributes
        returns a result that cannot pass with additional verification (PENDING: Not yet implemented)
    when the request times out
      retuns a timeout result

Proofing::Aamva::VerificationClient
  #send_verification_request
    should get the auth token from the auth client
    when verification is successful
      should return a successful response
    when verification is not successful
      should return an unsuccessful response with errors

Db::Identity::SpActiveUserCounts
  returns total active user counts per sp broken down by ial1 and ial2 for ial1 only sps
  is empty
  returns total active user counts per sp broken down by ial1 and ial2 for ial2 only sps
  returns total active user counts per sp broken down by ial1 and ial2 for ial1 ial2 sps

Idv::Actions::VerifyDocumentStatusAction
  #call
    with no document capture session
      calls analytics
    with document capture session with no result
      calls analytics
    successful async result
      calls analytics to log the successful event
      assigns session variables
      adds costs
      with barcode attention result
        assigns session variables
      with existing applicant
        clears applicant
      unbilled
        adds costs

BackupCodeGenerator
  creates codes with the same salt for that batch
  creates different salts for different batches
  should generate backup codes and be able to verify them
  filters out profanity
  generates 12-letter/digit codes via base32 crockford
  should reject invalid codes

BarcodeOutputter
  #image_data
    returns image data

Funnel::Registration::TotalRegisteredCount
  returns 1 when a user is fully registered
  returns 2
  returns 0 until the user is fully registered
  returns 0

RandomPhrase
  #to_s
    defaults to word length of 4
    stringifies to space-delimited phrase
    does not contain the letters I L O U
  #initialize
    checks for profanity and regenerates a random number when it finds

GpoConfirmationExporter
  #run
    creates psv string

Idv::InheritedProofing::Va::Mocks::Service
  #initialize
    sets #auth_code
  #execute
    with auth code is invalid
      returns an error
    when auth_code is valid
      returns a Hash

PushNotification::MfaLimitAccountLockedEvent
  #event_type
    is the RISC event type
  #payload
    is a subject with the provided iss_sub

Proofing::Mock::StateIdMockClient
  #proof
    with info that triggers a failure to match
      returns a failed to match result
    with good info
      returns a passing result
    with a nil state id number
      returns a good result
    with info that triggers an error
      returns an error result

Idv::ProfileMaker
  #save_profile
    creates an inactive Profile with encrypted PII
    as active
      creates an active profile
    with an initiating service provider
      creates a profile with the initiating sp recorded
    with deactivation reason
      creates an inactive profile with deactivation reason

Proofing::Aamva::Request::SecurityTokenRequest
  #headers
    should return valid SOAP headers
  #send
    when the request is successful
      returns a response object
    when the connection fails
      raises an error
    when the request times out a second time
      raises an error
    when the request times out once
      retries and tries again
  #body
    should be a signed request body
  #url
    should be the AAMVA authentication url

AttributeAsserter
  #build
    verified user and IAL2 request
      Service Provider specifies empty bundle
        only includes uuid, verified_at, aal, and ial
      custom bundle includes dob
        formats the dob in an international format
      custom bundle has invalid attribute name
        silently skips invalid attribute name
      custom bundle includes zipcode
        formats zipcode as 5 digits
      x509 attributes included in the SP attribute bundle
        user did not present piv/cac
          does not include x509_subject, x509_issuer, and x509_presented
        user presented piv/cac
          includes x509_subject x509_issuer x509_presented
      custom bundle includes email, phone, and first_name
        formats the phone number as e164
        gets UUID (MBUN) from Service Provider
        creates getter function
        includes all requested attributes + uuid
      Service Provider does not specify bundle
        authn request specifies bundle
          uses authn request bundle
        authn request does not specify bundle
          only returns uuid, verified_at, aal, and ial
      bundle includes :ascii
        transliterates attributes to ASCII
        skips ascii as an attribute
    unverified user and IAL2 request
      behaves like unverified user
        custom bundle includes all_emails
          includes all the user email addresses
        custom bundle includes email, phone
          only includes UUID, email, aal, and ial
        custom bundle does not include email, phone
          only includes UUID, aal, and ial
    verified user and IAL1 AAL3 request
      service provider configured for AAL3
        creates a getter function for aal attribute
        includes aal
      service provider requests AAL3
        creates a getter function for aal attribute
        includes aal
    verified user and IAL1 request
      custom bundle includes email, phone, and first_name
        gets UUID (MBUN) from Service Provider
        does not create a getter function for IAL1 attributes
        only includes uuid, email, aal, and ial (no verified_at)
      custom bundle has invalid attribute name
        silently skips invalid attribute name
      x509 attributes included in the SP attribute bundle
        user presented piv/cac
          includes x509_subject x509_issuer and x509_presented
        user did not present piv/cac
          does not include x509_subject x509_issuer and x509_presented
      Service Provider specifies empty bundle
        only includes UUID, aal, and ial
      custom bundle includes verified_at
        the service provider is ial1
          only includes uuid, email, aal, and ial (no verified_at)
        the service provider is ial2
          includes verified_at
      Service Provider does not specify bundle
        authn request specifies bundle with first_name, last_name, email, ssn, phone
          only includes uuid, email, aal, and ial
        authn request does not specify bundle
          only includes uuid, aal, and ial
    unverified user and LOA1 request
      behaves like unverified user
        custom bundle does not include email, phone
          only includes UUID, aal, and ial
        custom bundle includes all_emails
          includes all the user email addresses
        custom bundle includes email, phone
          only includes UUID, email, aal, and ial
    IALMAX
      service provider requests IALMAX with IAL2 user
        includes ial
        creates a getter function for ial attribute
      service provider requests IALMAX with IAL1 user
        includes ial
        creates a getter function for ial attribute

PushNotification::RecoveryActivatedEvent
  #event_type
    is the RISC event type
  #payload
    is a subject with the provided iss_sub

Idv::PhoneConfirmationSession
  .start
    starts a session for sms
    starts a session for voice
  #matches_code?
    returns false if the code does not match
    uses a secure comparison
    returns true if the code matches with different case
    returns true if the code matches
  #regenerate_otp
    returns a copy with a new OTP and expiration
  #expired?
    returns true if the OTP is expired
    returns false if the OTP is not expired

Idv::Steps::SsnStep
  #call
    when pii_from_doc is not present
      marks previous step as incomplete
    with valid ssn
      logs attempts api event
      merges ssn into pii session value
      with service provider device profiling disabled
        with proofing device profiling collecting disabled
          does not add a session id to flow session
      with existing session applicant
        clears applicant
      with service provider device profiling enabled
        with proofing device profiling collecting disabled
          still adds a session id to flow session
      with service provider device profiling disabled
        with proofing device profiling collecting enabled
          does not add a session id to flow session
          does not change threatmetrix_session_id when updating ssn
      with service provider device profiling enabled
        with proofing device profiling collecting enabled
          does not change threatmetrix_session_id when updating ssn
          adds a session id to flow session

AgencyIdentityLinker
  #sp_identity_from_uuid_and_sp
    returns sp_identity if it exists
    returns nil if sp_identity does not exist
  #for
    when there is not an agency identity
      and there is no service provider identity
        returns nil
      but there is a service provider identity
        returns the service provider identity
        persists the service provider identity as an agency identity
    when there is already an agency identity
      returns the existing agency identity
  #link_identity
    links identities from 2 sps
    does not allow 2 sp uuids to be reused after user deletes account
    returns the existing agency_identity if it exists
    does not allow agency_identity uuid to be reused after user deletes account
    does not link identity without an agency_id
    links identity with 1 sp

UriService
  .add_params
    is nil with a nil uri
    appends to existing query parameters
    is nil with a bad uri
    adds params to uris and escapes them correctly
    is nil with a blank string uri
  .params
    parses params out as a hash from a URI

DocumentCaptureSessionResult
  EncryptedRedisStructStorage
    works with EncryptedRedisStructStorage

UserEventCreator
  #create_out_of_band_user_event
    creates an event without a device and without an IP address
  #create_user_event_with_disavowal
    creates a device with a disavowal
  #create_user_event
    when a device exists for the user
      updates the device and creates an event
    when no device exists
      creates a device and creates an event
      alerts the user if they have other devices
      when there is no device cookie
        assigns one to the device
    when a device exists that is not associated with the user
      alerts the user if they have other devices
      creates a device and creates an event

Encryption::Encryptors::SessionEncryptor
  #encrypt
    sets an encryption context
    returns a KMS wrapped AES encrypted ciphertext
  #decrypt
    decrypts the ciphertext

RememberDeviceCookie
  #to_json
    should render a JSON string
  .from_json(json)
    should raise an error if the role in the JSON string is not "remember_me"
    should parse a JSON string
    should raise an error if the role in the JSON string is missing
  #valid_for?(user:, expiration_interval:)
    when the user revoked remember device after creating the token
      is expected to eq false
    when the token does not refer to the current user
      returns false
    when the user revoked remember device before creating the token
      is expected to eq true
    when the token is expired
      is expected to eq false
    when the token is valid
      is expected to eq true

PushNotification::IdentifierRecycledEvent
  #event_type
    is the RISC event type
  #payload
    is a subject with an email

SamlEndpoint
  #saml_metadata
    returns the saml metadata with the suffix added to the urls
    includes the SingLogoutService endpoints when configured
    does not include the SingLogoutService endpoints when configured
  #secret_key
    returns the key loaded from the file system
    when the key file does not exist
      raises an error
  endpoint_configs
    should return an array of parsed endpoint config data
  .suffixes
    should list the suffixes that are configured
  #x509_certificate
    returns the x509 cert loaded from the filesystem

EncryptedDocumentStorage::DocumentWriter
  #storage
    outside production
      it uses the disk
    in production
      is uses S3
  #build_filename_for_content_type
    extension assigning
      png
        is expected to eql ".png"
      nonsense
        is expected to eql ""
      jpeg
        is expected to eql ".jpeg"
      
        is expected to eql ""
  #encrypt_and_write_document
    encrypts the document and writes it to storage

StoreSpMetadataInSession
  #call
    when IAL2 and phishing-resistant are requested
      sets the session[:sp] hash
    when a ServiceProviderRequestProxy is not found
      does not set the session[:sp] hash
    when IAL2 and AAL3 are requested
      sets the session[:sp] hash
    when a ServiceProviderRequestProxy is found
      sets the session[:sp] hash

UpdateUser
  #call
    updates the user with the passed in attributes
    with a phone already configured
      does not delete the phone configuration
    with no phone configured
      sends a recovery information changed event
      creates a phone configuration
    when creating a new phone
      when phone is set as default
        updates made_default_at timestamp with current date and time
      when phone is not set as default
        updates made_default_at with nil value
      when phone is not set as default
        updates made_default_at with nil value
    when updating an existing phone
      when phone is set as default
        updates made_default_at timestamp with current date and time
      when phone does not belong to user
        does not update the user if the phone does not belong to them
      when phone is not set as default
        updates made_default_at timestamp with current made_default_at date and time

ProofingSessionAsyncResult
  EncryptedRedisStructStorage
    works with EncryptedRedisStructStorage

DocAuth::LexisNexis::Request
  unimplemented methods
    #workflow
      raises NotImplementedError
    #username
      raises NotImplementedError
    #handle_http_response
      raises NotImplementedError
    #password
      raises NotImplementedError
    #body
      raises NotImplementedError
  #fetch
    POST request
      with an unsuccessful http request
        includes information on the error
        returns a generic DocAuth::Response object
      with a successful http request
        raises a NotImplementedError when attempting to handle the response
    GET request
      with an unsuccessful http request
        returns a generic DocAuth::Response object
        includes information on the error
      with a successful http request
        raises a NotImplementedError when attempting to handle the response
  #settings
    includes the locale

Proofing::Aamva::Response::AuthenticationTokenResponse
  #auth_token
    returns the token from the response body
  #initialize
    with a non-200 status code
      raises an AuthenticationError
    when the API response has an error
      raises an AuthenticationError
    when the API response is missing a token
      raises an AuthenticationError

Idv::InPerson::CompletionSurveySender
  .send_completion_survey
    does nothing if the user should not receive a survey
    user should receive a survey
      sends a survey to the user's confirmed email addresses
      marks the user as having received a survey

UserAlerts::AlertUserAboutNewDevice
  #call
    sends an email to all confirmed email addresses

AccessTokenVerifier
  #identity
    with a valid access_token
      returns the identity record
    with a bad access token
      errors
    with an expired access_token
      errors
  #submit
    with a valid bearer token
      is successful
    with an invalid bearer token
      is not successful
    with a malformed authorization header
      is not successful
    without an authorization header
      is not successful

IaaReportingHelper
  #iaas
    IAAS on different GTCs
      returns both of the IAAS with the proper key of different GTCs
    multiple IAAs on same GTC
      returns both fo the IAAS with the proper key

AccountReset::DeleteAccount
  #call
    can be called even if DeletedUser exists
    when user.confirmed_at is nil
      does not blow up

PivCacService
  #decode_token
    when communicating with piv/cac service
      with HTTP failure
        returns an error
      when configured to contact remote service
        returns the decoded JSON from the target service
        sends the token to the target service
        with test data
          returns an error
      when configured to contact piv_cac service for local development
        returns the decoded JSON from the target service
        sends the token to the target service
        with test data
          returns an error
      when in non-development mode
        raises an error if no token provided
        when in development mode
          directs the user to a local page
        when configured with a user-facing endpoint
          is expected to eq "http://localhost:1234/?nonce=once&redirect_uri=http%3A%2F%2Fexample.com%2Fasdf"
        when given a non-String token
          returns bad token error
      with bad json
        returns an error
    when configured for local development
      raises an error if no token provided
      returns the test data
    with piv/cac service disabled
      returns an error
  #randomize_uri
    when a static URL is configured
      returns the URL unchanged
    when a random URL is configured
      returns the URL with random bytes

DocAuth::Acuant::AcuantClient
  when there is a networking error
    returns a response with an exception
  #post_back_image
    sends an upload image request for the back image
  #post_images
    when results pass
      sends an upload image request for the front and back DL images
    when the results return failure
      returns a FormResponse with failure
  when the request is not successful
    returns a response with an exception
  #post_front_image
    sends an upload image request for the front image
  #get_results
    when the result is a failure
      sends a request to get the results and returns failure
    when the result is a pass
      sends a request to get the results and returns success
  #create_document
    sends a create document request with cropping mode
    invalid cropping mode
      raises an error

DocAuth::LexisNexis::LexisNexisClient
  #post_images
    with unknown image source
      sends an upload image request for the front and back DL images
    when the results return failure
      returns a FormResponse with failure
    with acuant image source
      sends an upload image request for the front and back DL images
  #create_document
    raises a NotImplemented error
  #post_front_image
    raises a NotImplemented error
  when the request is not successful
    returns a response with an exception
  #post_back_image
    raises a NotImplemented error
  #get_results
    raises a NotImplemented error
  when there is a networking error
    returns a response with an exception

BannedUserResolver
  the user is not banned
    returns false
  the user is banned for all SPs
    returns true for all SPs
  the user is banned for a single SP
    returns false for the not banned SP
    returns true for the banned SP

Proofing::Mock::ResolutionMockClient
  #proof
    with a zipcode that does not match
      returns a proofing failed result
    with a simulated failed to contact by first name
      returns an unsuccessful result with exception
    with a first name that does not match
      returns a proofing failed result
    with an SSN that does not match
      returns a proofing failed result
    with a simulated timeout by name
      returns a timed out result with exception
    with a simulated failed to contact by SSN
      returns an unsuccessful result with exception
    with a passing applicant
      returns a passed result

Idv::InPerson::EnrollmentCodeFormatter
  .format
    returns a formatted code

CloudFrontHeaderParser
  with no CloudFront header sent
    #client_port
      returns nil
  with an IPv6 address
    #client_port
      returns the client port number
  with an IPv4 address
    #client_port
      returns the client port number

Proofing::Aamva::Proofer
  #proof
    when verification is successful
      the result is successful
    when verification is unsuccessful
      the result should be failed
    when verification attributes are missing
      the result should be failed

OpenidConnectAttributeScoper
  #scopes
    with a string of space-separate scopes
      parses scopes
    with an array
      filters the array
  #requested_attributes
    with profile
      is the array of attributes corresponding to the scopes
    with profile
      is the array of attributes corresponding to the scopes
  #filter
    with profile:verified_at scope
      includes the verified_at attribute
    minimum scope
      is only sub and iss
    with address scope
      includes the address attribute
    with the all_emails scope
      includes the all_emails attributes
    with social_security_number scope
      includes social_security_number
    with profile:name scope
      includes name attributes
    with profile:birthdate scope
      includes name attributes
    with phone scope
      includes the phone and email_verified attributes
    with email scope
      includes the email and email_verified attributes
    with profile scope
      includes name attributes and birthdate

UserAlerts::AlertUserAboutAccountVerified
  #call
    sends an email to all confirmed email addresses

AccountReset::GrantRequest
  #call
    adds a notified at timestamp and granted token to the user

Idv::DocAuthFormResponse
  #merge
    uses pii from other if available
    falls back to pii from self if not available in other
    results in an instance of Idv::DocAuthFormResponse
  #pii_from_doc
    is writable
    defaults to empty hash
  #attention_with_barcode?
    is expected to eq false
    with attention with barcode response extra
      is expected to eq true

AccountReset::Cancel
  validates presence of token
  validates validity of token
  when the token is valid
    notifies the user via email of the account reset cancellation
    updates the account_reset_request
    when the user has a phone enabled for SMS
      returns a FormResponse with message_id
      notifies the user via SMS of the account reset cancellation
    when the user does not have a phone enabled for SMS
      does not notify the user via SMS
  when the token is not valid
    does not notify the user via email of the account reset cancellation
    does not update the account_reset_request
    when the user does not have a phone enabled for SMS
      does not notify the user via SMS
    when the user has a phone enabled for SMS
      does not notify the user via SMS of the account reset cancellation

Funnel::Registration::AddMfa
  shows user is not fully registered with no mfa
  shows user is fully registered after adding an mfa

AccountReset::GrantRequestsAndSendEmails
  #good_job_concurrency_key
    is the job name and the current time, rounded to the nearest 5 minutes
  #perform
    after not waiting the full wait period
      does not send notifications when the request was cancelled
      does not send notifications after a request
    after waiting the full wait period
      sends 2 notifications after 2 requests are granted
      sends notifications after a request is granted
      does not send notifications when the notifications were already sent
      does not send notifications when the request was cancelled

FrontendLogger
  #track_event
    with unknown event
      logs with prefix for unknown event (FAILED - 1)
    with method handler
      calls method with attributes based on signature (FAILED - 2)

Idv::GpoMail
  #mail_spammed?
    when too much mail has been sent
      returns true if the oldest event was within the last month
      returns false if the oldest event was more than a month ago
    when the amount of sent mail is lower than the allowed maximum
      returns false
    when MAX_MAIL_EVENTS or MAIL_EVENTS_WINDOW_DAYS are zero
      returns false
    when no mail has been sent
      returns false

Encryption::Encryptors::BackgroundProofingArgEncryptor
  #decrypt
    decrypts the ciphertext
  #encrypt
    returns a KMS wrapped AES encrypted ciphertext
    sets an encryption context

Agreements::IaaGtcSeeder
  .run
    updates a record if one exists
    creates new records if none exist

OtpPreferenceUpdater
  #call
    with authentication context
      when otp_delivery_preference is the same as the user otp_delivery_preference
        does not update the user
      when otp_delivery_preference is different from the user otp_delivery_preference
        updates the user
    when user is nil
      does not update the user

FormResponse
  #merge
    merges error details
    merges errors
    merges hash and ActiveModel::Errors
    returns true if one is false and one is true
    merges the extra analytics
    merges multiple errors for key
  #to_h
    when the extra argument is present
      returns a hash with success and errors keys, and any keys from the extra hash
    when the extra argument is nil
      returns a hash with success and errors keys
    when errors is an ActiveModel::Errors
      omits details if errors are empty
      returns a hash with success, errors, and error_details keys
      omits details if merged errors are empty
      with serialize_error_details_only
        excludes errors from the hash
  #errors
    initialized with hash
      returns the value of the errors argument
    initialized with ActiveModel::Errors
      returns the messages value of the errors argument
  #extra
    returns the extra hash
  #success?
    when the success argument is true
      returns true
    when the success argument is false
      returns false

DocAuth::Acuant::Responses::CreateDocumentResponse
  contains the instance_id from the response

Encryption::Encryptors::AttributeEncryptor
  #stale?
    returns true if old key used to decrypt and we turn on new encryption
    returns false if the current key last was used to decrypt something
  #decrypt
    with new new non kms based encryption
      with a ciphertext made with a key that does not exist
        raises and encryption error
      with a ciphertext made with the current key
        decrypts the ciphertext
      after rotating keys
        tries to decrypt with successive keys until it is successful
  #encrypt
    returns encrypted text

ServiceProviderUpdater
  #run
    dashboard is available
      removes inactive Service Providers
      ignores attempts to alter native Service Providers
      updates existing dashboard-provided Service Providers
      updates certs (plural)
      creates new dashboard-provided Service Providers
      updates redirect_uris
    dashboard has the old singular cert attribute
      ignores the old column
    a non-native service provider is invalid
      raises an error
    dashboard is not available
      logs error and does not affect registry
    GET request to dashboard raises an error
      logs error and does not affect registry

DisplayablePiiFormatter
  #format
    #verified_at
      for a verified user
        returns the date the user was verified
    #phone
      with a phone number
        returns a formatted phone number
      without a phone number
        returns nil
    #birthdate
      with a MM/DD/YYYY dob
        returns a formatted birdate
      with a YYYY-MM-DD dob
        returns a formatted birdate
    ial1
      returns formatted ial1 PII
    PIV/CAC attributes
      the user does not have a piv/cac configured
        returns nil for x509_issuer and x509_subject
      the user has a piv/cac configured
        returns x509_issuer and x509_subject
    ial2
      returns formatted ial2 PII
    #address
      with a second address line
        returns a formatted address
      without a second address line
        returns a formatted address

Encryption::KmsClient
  #encrypt
    logs the context
    with KMS enabled
      with multi region disabled
        encrypts with KMS legacy single region
      with multi region enabled
        encrypts with KMS multi region
    with KMS disabled
      encrypts with a local key
  #decrypt
    logs the context
    with a ciphertext encrypted with KMS multi region
      decrypts the ciphertext with KMS
    with a ciphertext encrypted with a local key
      decrypts the ciphertext with a local key
    with a contextless ciphertext
      created with a local key
        delegates to the contextless kms client
      created with KMS
        delegates to the contextless kms client

Analytics
  tracks session duration
  #track_event
    throws an error when pii is passed in
    includes the locale of the current request
    does not alert when pii_like_keypaths is passed
    tracks the user passed in to the track_event method
    does not track unique events and paths when an event fails
    throws an error when it detects sample PII in the payload
    does not alert when pii values are inside words
    identifies the user and sends the event to the backend
    tracing headers
      includes the tracing header as trace_id

IdTokenBuilder
  #id_token
    sets the nonce as the nonce
    sets the subject as the uuid
    sets the issued-at to now
    sets the algorithm header
    sets the kid for the signing key in the JWT headers
    sets the code hash correctly
    sets the acr to the request acr
    sets the audience to the service provider
    sets the jti to something meaningful
    sets the issuer to the root url
    sets the not-before to now
    sets the access token hash correctly
    without a custom_expiration
      sets the expiration to the ttl of the session key in redis
    including attributes allowed by the scope from the request
      with the email scope
        sets the email
      without the email scope
        does not include the email

Idv::Steps::VerifyWaitStepShow
  #call
    adds costs
    moves to the next page
    clears pii from session
    when there is no document capture session ID
      returns to the verify page
    when verification fails
      marks the verify step incomplete and redirects to the warning page
    when the proofing session result is missing
      deletes the document capture session and returns to the verify page
    when there is no document capture session
      deletes the document capture session and returns to the verify page
    when verification encounters an exception
      marks the verify step incomplete and redirects to the exception page

ForgetAllBrowsers
  #call
    updates the remember_device_revoked_at

PushNotification::HttpPush
  #deliver
    makes an HTTP post to service providers with a push_notification_url
    when a user has revoked access to an SP
      does not notify that SP
    when push_notifications_enabled is disabled
      does not deliver any notifications
    when risc_notifications_active_job_enabled is enabled
      delivers a notification via background job
    with a timeout when posting to one url
      logs a warning
      still posts to the others
    with a non-200 response from a push notification url
      logs a warning
    with an event that sends agency-specific iss_sub
      sends the agency-specific uuid

Proofing::LexisNexis::Ddp::VerificationRequest
  #body
    returns a properly formed request body
    without an address line 2
      sets StreetAddress2 to and empty string
  #url
    returns a url for the DDP session query endpoint

AccountResetHealthChecker
  .check
    when an old request was cancelled
      returns an unhealthy check
    when all requests are serviced on time
      returns a healthy check
    when a request is not serviced on time
      returns an unhealthy check
    when there are no requests
      returns a healthy check

BrowserCache
  .parse
    parses a user agent using Browser gem
    caches by user agent
    does not error on long user agents containing multi-byte characters

DocAuth::Acuant::ResultCodes
  .from_int
    is nil when there is no matching code
    is a result code for the int

KeyRotator::HmacFingerprinter
  #rotate
    does not change the `updated_at` timestamp
    changes email fingerprint if no active profile
    changes email and ssn fingerprints

PhoneNumberCapabilities
  has valid configuration
  .load_config
    loads the config
    when there are country_phone_number_overrides
      overrides the YAML but does not erase values
  #supports?
    sms
      sms is unsupported
        is expected to eq false
      sms is supported
        is expected to eq true
    voice
      voice is supported
        is expected to eq true
      voice is unsupported
        is expected to eq false
    unknown method
      should raise an error
  #sms_only?
    Bermuda number
      is expected to eq true
    Bahamas number
      is expected to eq true
    Morocco number
      is expected to eq true
    phonelib returns nil or a 2-letter country code that doesn't match our YAML
      is expected to eq false
    voice is supported
      is expected to eq false
  #supports_voice?
    Philippines number that is unconfirmed
      is expected to eq false
    Philippines number that is confirmed
      is expected to eq true
    US number
      is expected to eq true
    Bermuda number
      is expected to eq false
  #unsupported_location
    returns the name of the unsupported country (Bermuda)
    returns the name of the unsupported country (Bahamas)
    phonelib returns default country
      returns the default country
  #supports_sms?
    Iraq number that is unconfirmed
      is expected to eq false
    Bermuda number
      is expected to eq true
    US number
      is expected to eq true
  #supports_all?
    voice is supported, sms is unsupported
      is expected to eq false
    sms is supported, voice is unsupported
      is expected to eq true
    both sms and voice are supported
      is expected to eq true

Encryption::AesCipher
  #decrypt
    returns plaintext
    raises error on invalid input
  #encrypt
    returns JSON string containing AES-encrypted ciphertext
  .encryption_cipher
    returns an AES cipher for encryption operation

AccountReset::CancelRequestForUser
  #call
    sends an email to the user's confirmed email addresses
    cancels the account reset request
    does not cancel account reset requests for a different user

Encryption::PasswordVerifier
  #digest
    creates a digest from the password
  Encryption::PasswordVerifier::PasswordDigest
    .parse_from_string
      does not blow up with unknown/new keys
  #stale_digest?
    returns true if the digest is stale
    returns false if the digest is fresh
  #verify
    returns false if the password does not match
    returns false for nonsense
    allows verification of legacy UAK passwords
    returns true if the password does match

Idv::Steps::SendLinkStep
  the return value from #call
    includes the telephony response

EncryptedAttribute
  #new
    automatically decrypts using old key
    raises an error if unable to decrypt with any keys
    automatically decrypts
  #stale?
    returns true when email was encrypted with old key
    returns false when email was encrypted with current key
  #new_from_decrypted
    automatically encrypts

Proofing::Aamva::SoapErrorHandler
  error_message
    when there is an error without a ProgramException section
      is expected to eq "A FooBar error occurred"
    when there is an error without a message
      is expected to include "A SOAP error occurred"
    when there is an error
      contains relevant parts of the error message
    when there is no error
      is expected to eq nil
  error_present?
    when an error is not present
      is expected to eq false
    when an error is present
      is expected to eq true

ServiceProviderRequestProxy
  .from_uuid
    when the record does not exist
      returns an instance of NullServiceProviderRequest
    bad input
      handles nil
      handles a null byte in the uuid
      handles arrays
      handles hashes
      handles empty string
    when the record exists
      both loa3 and ial2 values return the same thing
      returns the record matching the uuid
      both loa1 and ial1 values return the same thing

DocAuth::Acuant::Requests::UploadImageRequest
  with a back image
    uploads the image and returns a successful result
  with a front image
    uploads the image and returns a successful result

DocAuthRouter
  DocAuthRouter::DocAuthErrorTranslatorProxy
    translates generic network errors
    logs a warning for errors it does not recognize and returns a generic error
    translates generic network errors
    translates http response errors and maintains exceptions
    translates errors using the normal doc auth translator
    translates individual error keys errors
  .doc_auth_vendor
    with a nil discriminator
      is the default vendor, and logs analytics events
    with a discriminator that hashes outside the test group
      is the original
    with a discriminator that hashes inside the test group
      is the alternate vendor
      with randomize false
        is the original vendor
  .client
    for lexisnexis
      is a translation-proxied lexisnexis client
    other config
      errors
    for acuant
      is a translation-proxied acuant client

VendorStatus
  raises an error if passed an unknown vendor
  #outage_message
    phone vendor outage
      returns default phone outage message
      from idv
        returns idv phone outage message
  #all_phone_vendor_outage?
    is expected to eq false
    with outage on all phone vendors
      is expected to eq true
    with outage on a phone vendor
      is expected to eq false
  #track_event
    logs status of all vendors
  #any_phone_vendor_outage?
    is expected to eq false
    with outage on a phone vendor
      is expected to eq true
  when all vendors are operational
    correctly reports no ial2 vendor outage
    correctly reports no vendor outage
  when any vendor has an outage
    correctly reports a vendor outage when lexisnexis_trueid is offline
    correctly reports a vendor outage when voice is offline
    correctly reports a vendor outage when acuant is offline
    correctly reports a vendor outage when sms is offline
    correctly reports a vendor outage when lexisnexis_instant_verify is offline
  when a non-ial2 vendor has an outage
    correctly reports no ial2 vendor outage
  when an ial2 vendor has an outage
    correctly reports an ial2 vendor outage
    user coming from idv flow
      with service_provider in session
        returns the correct message tailored to the service provider
      no service_provider in session
        returns the correct message
    user coming from create_account
      returns the correct message
  #all_vendor_outage?
    is expected to eq false
    with parameters
      is expected to eq false
      with outage on all vendors
        is expected to eq true
    with outage on all vendors
      is expected to eq true

ParseControllerFromReferer
  #call
    when the referer is present
      returns the corresponding controller and action
    when the referer is nil
      returns "no referer" string

CompletionsDecider
  #go_back_to_mobile_app?
    user agent is desktop and redirect_uri does not exist
      returns false
    request url is nil
      returns false
    user agent is mobile and redirect_uri does not start with http
      returns false
    user agent is mobile and redirect_uri starts with http
      returns false
    user agent is desktop and redirect_uri does not start with http
      returns true
    user agent is desktop and redirect_uri starts with http
      returns false
    user agent is mobile and redirect_uri does not exist
      returns false

X509::Attributes
  #new_from_hash
    initializes from plain Hash
    assigns to all members
    initializes from complex Hash
    ignores unknown keys
  #new_from_json
    inflates from JSON string
    returns all-nil object when passed blank JSON

Proofing::Aamva::Response::SecurityTokenResponse
  #security_context_token_reference
    returns the security context token reference from the request
  #security_context_token_identifier
    returns the security token identifier from the request
  #nonce
    returns the nonce from the request
  #initialize
    with a non-200 status code
      raises an AuthenticationError
    when the API response is an error
      raises an AuthenticationError
    when the security context token is missing
      should raise an error

ResetUserPassword
  #call
    creates a password_invalidated user event
    clears all remembered browsers by updating the remember_device_revoked_at timestamp
    notifies the user via email to each of their email addresses
    changes the password

DocAuth::ErrorGenerator
  The correct errors are delivered when
    DocAuthResult is Failed with multiple back alerts
    DocAuthResult is Failed
    DocAuthResult is Failed with single alert with a side
    DocAuthResult is Failed with multiple different alerts
    DocAuthResult is Failed with an unknown alert
    DocAuthResult is Failed with multiple alerts including an unknown
    DocAuthResult is Attention
    DocAuthResult is Failed with an unknown passed alert
    DocAuthResult is Failed with multiple id alerts
    DocAuthResult is Failed with multiple front alerts
  The correct errors are delivered for image metrics when
    both images sharpness is too low
    both images have different problems
    back image HDPI is too low
    front image sharpness is too low
    front and back image DPI is too low
    both images glare is too low
    front image glare is too low
    front image HDPI is too low
    back image glare is too low
    front image VDPI is too low
    both images sharpness is too low
    both images glare is too low
    back image sharpness is too low

Proofing::Aamva::Applicant
  should format dob into CCYY-MM-DD form
  should format empty or malformed dobs into empty strings
  .from_proofer_applicant(applicant)
    should create an AAMVA applicant with necessary proofer applcant data

Proofing::Aamva::HmacSecret
  #base64digest
    should return a decoded PSHA1 hash

OutOfBandSessionAccessor
  #ttl
    returns the remaining time-to-live of the session data in redis
  #destroy
    destroys the session
  #load_pii
    loads PII from the session
  #load_x509
    loads X509 attributes from the session

Proofing::LexisNexis::PhoneFinder::Proofer
  behaves like a lexisnexis proofer
    #proof_applicant
      when proofing fails
        results in an unsuccessful result
      when proofing succeeds
        results in a successful result
  #proof
    when the request times out
      retuns a timeout result
    when an error is raised
      returns a result with an exception
    when the response is a success
      is a successful rdp2 result
      is a successful rdp1 result
    when the rdp2 response is a failure
      is a failure result
    when the rdp1 response is a failure
      is a failure result

SessionEncryptor
  makes a roundtrip okay across separate instances
  #load
    decrypts encrypted session
  #dump
    encrypts session

SendSignUpEmailConfirmation
  #call
    sends the user an email with a confirmation link and the request id
    updates the confirmation values on the email address for the user
    when the user already has a confirmation token
      regenerates a token if the token is expired
    when resetting a password
      sends an email with a link to try another email if the current email is unconfirmed

Proofing::LexisNexis::Response
  #verification_status
    failed
      is expected to eq "failed"
      with an invalid transaction status
        returns a hash of errors
      with a transaction error
        returns a hash of errors
    passed
      is expected to eq "passed"
  #verification_errors
    with a passed verification
      is expected to eq {}
    with a failed verification
      returns a hash of errors
  .new
    with an HTTP status error code
      raises an error that includes the status code and the body
  #response_body
    the result includes invalid JSON
      raises a JSON parse error with a generic error message

DocAuth::Acuant::Requests::GetResultsRequest
  #fetch
    sends a request and return the response

UuidReporter
  .new
    raises the appropriate error when the email file contains an invalid email
    raises the appropriate error when the sp file contains an SPs from multiple agencies
    raises the appropriate error with missing sp file
    raises the appropriate error with missing email file
    raises the appropriate error when the output file exists
    raises the appropriate error when the sp file contains an invalid issuer
  .run
    with valid inputs
      generates the correct csv

Proofing::Mock::DeviceProfilingBackend
  #record_profiling_result
    sets the value in redis
    raises with unknown result

Idv::InheritedProofing::Va::Service
WARNING: Private key file '/home/jmax/projects/identity-idp/tmp/empty.key' not found!
  is expected to eq #<OpenSSL::PKey::RSA:0x00005652fe4e3bd8 oid=rsaEncryption>
WARNING: Private key file '/home/jmax/projects/identity-idp/tmp/empty.key' not found!
  example at ./spec/services/idv/inherited_proofing/va/service_spec.rb:19
  #execute
    when the auth code is valid
WARNING: Private key file '/home/jmax/projects/identity-idp/tmp/empty.key' not found!
      makes an authenticated request
WARNING: Private key file '/home/jmax/projects/identity-idp/tmp/empty.key' not found!
      decrypts the response
    when a request error is raised
WARNING: Private key file '/home/jmax/projects/identity-idp/tmp/empty.key' not found!
      rescues and returns the error
    when a non-200 error is raised
WARNING: Private key file '/home/jmax/projects/identity-idp/tmp/empty.key' not found!
      rescues and returns the error
      when http status is unavailable (nil)
WARNING: Private key file '/home/jmax/projects/identity-idp/tmp/empty.key' not found!
        rescues and returns the error
    when the auth code is invalid
      when an empty? string
        behaves like an invalid auth code error is raised
WARNING: Private key file '/home/jmax/projects/identity-idp/tmp/empty.key' not found!
          raises an error
      when an nil?
        behaves like an invalid auth code error is raised
WARNING: Private key file '/home/jmax/projects/identity-idp/tmp/empty.key' not found!
          raises an error
    when a decryption error is raised
WARNING: Private key file '/home/jmax/projects/identity-idp/tmp/empty.key' not found!
      rescues and returns the error

MaintenanceWindow
  #start
    is formatted in the display_time_zone
    with an empty value
      is expected to eq nil
  #finish
    is formatted in the display_time_zone
    with an empty value
      is expected to eq nil
  #active?
    when both start and finish are empty
      is falsey
    when now is during the maintenance window
      is expected to eq true
    when now is outside the maintenance window
      is expected to eq false

SecureHeadersAllowList
  .csp_with_sp_redirect_uris
    properly reduces mobile uris
    handles URLs that include URL fragments
    handles sp_redirect_uris with nil elements
    properly reduces web uris
    handles nil sp_redirect_uris

DocAuth::ProcessedAlertToLogAlertFormatter
  when ProcessedAlertToLogAlertFormatter is called
    returns failed if both passed and failed are returned by the alert
    returns the formatted log hash

AccountReset::CreateRequest
  #call
    when the user does not have a phone
      does not include a message_id in the response
    when the user has a phone
      includes a message_id in the response

Idv::Steps::InPerson::VerifyStep
  #call
    passes the X-Amzn-Trace-Id to the proofer
    sets uuid_prefix on pii_from_user
    only enqueues a job once
    updates proofing component vendor
    when different users use the same SSN within the same timeframe
      throttles them all
    when pii_from_user is blank
      marks step as incomplete

EncryptedRedisStructStorage
  .init_fields
    does not blow up with unknown keys
  .load
    returns nil if no data exists
    with a struct that does not have a redis_key_prefix
      raises an error with a message describing what to define
    with an empty id
      is nil
    with a keyword init struct
      loads the value out of redis
    with an ordered initializer struct
      loads the value out of redis
  .key
    with a struct that has a redis_key_prefix
      prefixes the id
    with a struct that does not have a redis_key_prefix
      raises an error with a message describing what to define
  .store
    with a struct that has an id
      stores the value with a ttl (expiration)
      writes encrypted data to redis
      with funky ASCII data inside the struct
        converts the data and stores it
      with an empty id
        errors
    with a struct that does not have an id method
      throws an error describing the missing method

SsnFormatter
  .format_masked
    numeric
      is expected to eq "1**-**-***9"
    numeric string
      is expected to eq "1**-**-***9"
    string with dashes
      is expected to eq "1**-**-***9"
  .format
    string with dashes
      is expected to eq "123-45-6789"
    numeric string
      is expected to eq "123-45-6789"
    numeric
      is expected to eq "123-45-6789"
  .normalize
    string with dashes
      is expected to eq "123456789"
    numeric string
      is expected to eq "123456789"
    numeric
      is expected to eq "123456789"

IalContext
  #ial2_or_greater?
    when the service provider is ial1 and ial1 is requested
      is expected to eq false
    when ial 1 is requested
      is expected to eq false
    when the service provider is ial2 and ial1 is requested
      is expected to eq false
    when the service provider is ial2 and ial2 is requested
      is expected to eq true
    when ialmax is requested
      is expected to eq false
    when ial 2 is requested
      is expected to eq true
    when the service provider is ial1 and ial is not requested
      is expected to eq false
    when the service provider is ial2 and ial is not requested
      is expected to eq true
  #ial2_requested?
    when the SP is nil
      is expected to eq true
    when ialmax is requested with a user with a verified profile
      is expected to eq true
    when ial 2 is requested
      is expected to eq true
    when ial 1 is requested
      is expected to eq false
    when ialmax is requested without a user
      is expected to eq false
    when ialmax is requested with a user with no profile
      is expected to eq false
  #default_to_ial2?
    when the service provider is ial1 and ial is not requested
      is expected to eq false
    when the service provider is ial1 and ial1 is requested
      is expected to eq false
    when the service provider is ial2 and ial is not requested
      is expected to eq true
    when the service provider is ial2 and ial2 is requested
      is expected to eq false
    when the service provider is ial2 and ial1 is requested
      is expected to eq false
  #ial
    with a bad string input
      is expected to raise KeyError
    with an integer input
      is expected to eq 2
    with a nil input
      is expected to eq nil
    with a string input of an authn context
      is expected to eq 1
  #ialmax_requested?
    when ialmax is requested
      is expected to eq true
    when ial 2 is requested
      is expected to eq false
    when ial 1 is requested without Comparison=minimum and ial 2 SP
      is expected to eq false
    when ial 1 is requested with Comparison=minimum and ial 2 SP
      is expected to eq true
    when ial 1 is requested with Comparison=minimum and ial 1 SP
      is expected to eq false
  #user_ial2_verified?
    when the user has proofed for ial2
      is expected to eq true
    when the user has not proofed
      is expected to eq false
    when the user is nil
      is expected to eq false
  #ial2_service_provider?
    when the service provider is ial1
      is expected to eq false
    when the service provider is ial3
      is expected to eq true
    when the service provider is ial2
      is expected to eq true
  #bill_for_ial_1_or_2
    when ial max and the user is nil
      is expected to eq 1
    when ial1
      is expected to eq 1
    when ial max and the user has not proofed
      is expected to eq 1
    when ial2
      is expected to eq 2
    when ial max and the user has proofed for ial2
      is expected to eq 2
    when ial is nil
      is expected to eq 1

PersonalKeyGenerator
  #verify
    returns false for short code
    returns true for the correct code
    returns false for the wrong code
    returns false for an invalid base32 code
    treats case insensitively
    forgives user mistaking O for 0
  #create
    returns the raw personal key
    allows length to be configured via ENV var
    hashes the raw personal key
    generates a phrase of 4 words by default
    sets the encrypted recovery code digest
  #normalize
    returns standardized string

OtpRateLimiter
  #increment
    updates otp_last_sent_at
    increments the otp_send_count
  #lock_out_user
    sets the second_factor_locked_at
  #exceeded_otp_send_limit?
    is true after maxretry_times attemps +1 in findtime minutes
    tracks verified phones separately. limiting one does not limit the other
    is false by default

Proofing::Mock::AddressMockClient
  #proof
    with a phone number that raises an exception
      returns a result with an exception
    with a phone number that times out
      returns a result with a timeout exception
    with a phone number that passes
      returns a successful result
    with a phone number that fails to match the user
      returns a proofing failed result

ArcgisApi::Geocoder
  #suggest
    returns an error response body but with Status coded as 200
    returns suggestions
    returns an error with Status coded as 4** in HTML
  #retrieve_token!
    reuses the cached token across instances
    sets token and token_expires_at
    reuses the cached token on subsequent requests
    calls the endpoint with the expected params
    implicitly refreshes the token when expired
  #find_address_candidates
    returns candidates from magic_key
    returns an error response body but with Status coded as 200
    handles no results

UserAlerts::AlertUserAboutPasswordChange
  #call
    sends an email to all of the users confirmed email addresses

RevokeServiceProviderConsent
  #call
    clears the verified attributes
    sets the deleted_at

Db::MonthlySpAuthCount::UniqueMonthlyAuthCountsByIaa
  .call
    is empty with no data
    with only partial month data
      adds up auth_counts and sp_return_log instances
    with data
      adds up auth_counts and sp_return_log instances

DocAuth::Mock::ResultResponse
  with a yaml file containing PII and an american-style date
    returns a result with that PII
  with a yaml file containing barcode attention
    returns a successful result
  with an image file
    returns a successful response with the default PII
  with a yaml file containing an unknown alert
    calls the warn_notifier
  with a yaml file containing a failed alert
    returns a result with that error
  with a yaml file containing a failed result
    returns a failed result
  with a yaml file containing PII
    returns a result with that PII
  with a yaml file containing a failed alert
    returns a result with that error
  with string data that is not a URI or a hash
    returns an error response that explains it should have been a hash
  with a malformed yaml file
    returns a result with the appopriate error
  with a yaml file containing a passing result
    returns a passed result
  with URI that is not a data URI
    returns an error response that explains it should have been a data URI
  with a yaml file containing a read error
    returns caution result
  with a yaml file containing integer zipcode
    returns a result with string zipcode
  with a data URI
    returns a successful response with the default PII

Proofing::ResolutionResultAdjudicator
  #adjudicated_result
    LexisNexis passes and AAMVA fails
      returns a failed response
    LexisNexis fails with attributes not covered by AAMVA response
      returns a failed response
    LexisNexis fails and AAMVA state is unsupported
      returns a failed response
    AAMVA and LexisNexis both pass
      returns a successful response
    LexisNexis fails with attributes covered by AAMVA response
      returns a successful response

DocAuth::Mock::DocAuthMockClient
  if the document is a YAML file it returns the PII from the YAML file
  ignores image_sources argument
  allows responses to be mocked
  implements the same public methods as the real Acuant client
  allows doc auth without any external requests
  when checking results gives a failure
    returns a failure response if the results failed

PhoneFormatter
  #format
    uses the international code for the country specified in the country code option
    formats international numbers correctly
    formats U.S. numbers correctly
    returns nil for nonsense
    returns nil for nil
    uses +1 as the default international code

AccountReset::FindPendingRequestForUser
  #call
    when a request exists, but it has been cancelled
      is expected to be nil
    when a request exists
      is expected to eq #<AccountResetRequest id: 98, user_id: 5030, requested_at: "2022-12-02 11:18:42.968680140 -0400", req...reated_at: "2022-12-02 12:18:42.984767601 -0400", updated_at: "2022-12-02 12:18:42.984767601 -0400">
    when a request exists, but it has been granted
      is expected to be nil
    when a request does not exist
      is expected to be nil
    when a request exists, but it is expired
      is expected to be nil

ImageUploadPresignedUrlGenerator
  #presigned_image_upload_url
    when doc_auth_enable_presigned_s3_urls is enabled
      when run in the datacenter
        is a real S3 url
      when run locally
        is a local fake S3 URL
    when doc_auth_enable_presigned_s3_urls is disabled
      is nil

MarketingSite
  .help_authentication_app_url
    points to the authentication app section of the help page
    when the user has set their locale to :es
      points to the authentication app section of the help page with the locale appended
  .security_and_privacy_how_it_works_url
    points to the privacy page
    when the user has set their locale to :es
      points to the privacy page with the locale appended
  .security_and_privacy_practices_url
    points to the privacy page
    when the user has set their locale to :es
      points to the privacy page with the locale appended
  .help_url
    points to the help page
    when the user has set their locale to :es
      points to the help page with the locale appended
  .valid_help_center_article?
    with valid article
      is expected to eq true
    with invalid article
      is expected to eq false
  .contact_url
    points to the contact page
    when the user has set their locale to :es
      points to the contact page with the locale appended
  .rules_of_use_url
    points to the rules of use page
    when the user has set their locale to :es
      points to the rules of use page with the locale appended
  .messaging_practices_url
    points to messaging practices section of the privacy page
    when the user has set their locale to :es
      points to the privacy page section with the locale appended
  .help_center_article_url
    with invalid article
      raises ArgumentError
    with valid article
      returns article URL
  .base_url
    points to the base URL
    when the user has set their locale to :es
      points to the base URL with the locale appended

Pii::ReEncryptor
  #perform
    re-encrypts PII using new code
    re-encrypts PII when supplied with raw PII and explicit profile

Idv::SendPhoneConfirmationOtp
  #call
    when the user has requested too many otps
      does not make a phone call or send an sms
    with voice
      makes a phone call
    with sms
      sends an sms
  #user_locked_out?
    the user is not locked out
      returns false
    the user is locked out
      returns true

Proofing::LexisNexis::InstantVerify::CheckToAttributeMapper
  #map_failed_checks_to_attributes
    when SSN checks fail
      returns an array that includes the ssn attribute
    when address checks fail
      returns an array that includes the ssn attribute
    when checks for multiple attributes fail
      returns an array that includes the failed attribute
    when date of birth checks fail
      returns an array that includes the dob attribute
    when a check that is unknown fails
      returns an array that includes the unknown attribute
    when all of the checks pass
      returns an empty array
    when multiple checks for the same attribute fail
      returns an array that includes the attribute once
    when the checks does not include any items
      returns an empty array

EncryptedDocumentStorage::S3Storage
  #write_image
    writes the document to S3

Idv::PhoneStep
  #submit
    records the transaction_id in the cost
    does not mark the phone as confirmed if it does not match 2FA phone
    does not increment step attempts when the vendor raises an exception
    records the transaction_id in the cost for failures too
    marks the phone as unconfirmed if it matches 2FA phone
    fails with bad params
    does not increment step attempts when the vendor request times out
    succeeds with good params
    increments step attempts
  #failure_reason
    when the vendor raises a timeout exception
      returns :timeout
    when there are not idv attempts remaining
      returns :fail
    when the vendor raises an exception
      returns :jobfail
    when there are idv attempts remaining
      returns :warning

DocAuth::LexisNexis::Requests::TrueIdRequest
  with acuant image source
    behaves like a successful request
      uploads the image and returns a successful result
  with unknown image source
    behaves like a successful request
      uploads the image and returns a successful result

Proofing::LexisNexis::Ddp::ResponseRedacter
  self.redact
    empty hash agrument
      passes the empty hash onward
    nil hash argument
      produces an error about an empty body
    mismatched data type argument
      produces an error about malformed body
    hash with mixed known and unknown keys
      redacts values of unknown keys and allows known keys

RequestPasswordReset
  #perform
    when the user is found and confirmed, but the email address is not
      sends the account registration email
      does not send a recovery activated push event
    when the user is found and confirmed
      sends a recovery activated push event
      calls irs tracking method forgot_password_email_sent
      sends password reset instructions
    when the user requests password resets above the allowable threshold
      only sends a push notification when the attempts have not been throttled
      throttles the email sending and logs a throttle event
    when two users have the same email address
      always finds the user with the confirmed email address
    when the user is found, not privileged, and not yet confirmed
      sends password reset instructions
    when the user is not found
      sends the account registration email

Proofing::LexisNexis::InstantVerify::VerificationRequest
  #body
    returns a properly formed request body
    with an international-formatted dob
      formats the DOB correctly
    without a uuid_prefix
      does not prepend
    without an address line 2
      sets StreetAddress2 to and empty string
  behaves like a lexisnexis request
    #send
      returns a response object initialized with the http response
      includes the basic auth header
    #http_headers
      contains the content type
  #url
    returns a url for the Instant Verify endpoint

Proofing::LexisNexis::DateFormatter
  #date
    with a YYYYMMDD formatted date
      is expected to eq Sat, 02 Jan 1993
    with a YYYY-MM-DD formatted date
      is expected to eq Sat, 02 Jan 1993
  #formatted_date
    is a hash

PushNotification::EmailChangedEvent
  #payload
    is a subject with an email
  #event_type
    is the RISC event type

Pii::Cacher
  #save
    updates fingerprints when keys are rotated
    does not raise an error if pii_fingerprint is nil but attributes are present
    does not attempt to rotate nil attributes
    writes decrypted PII to user_session
    allows specific profile to be decrypted
  #fetch
    allows specific profile to be decrypted
    fetches decrypted PII from user_session

TimeService
  .round_time
    returns a Time instance rounded to the nearest interval

Idv::Steps::DocumentCaptureStep
  #call
    does not raise an exception when stored_result is nil
  #extra_view_variables
    with native camera A/B testing enabled
      includes the A/B testing variables to be passed to the view
    with acuant sdk upgrade A/B testing enabled
      and A/B test specifies the newer acuant version
        passes correct variables and acuant version when newer is specified
      and A/B test specifies the older acuant version
        passes correct variables and acuant version when older is specified

EncryptedDocumentStorage::LocalStorage
  #write_image
    writes the document to the disk

DocAuth::Acuant::PiiFromDoc
  #call
    correctly parses the pii data from acuant and returns a hash
  #convert_date
    parses and formats negative numbers
    is nil for a bad format
    parses and formats a date from the Acuant format

Proofing::Aamva::Request::AuthenticationTokenRequest
  #body
    should be a signed request body
  #url
    should be the AAMVA authentication url
  #timeout
    reads from the config object
  #headers
    should return valid SOAP headers
  #send
    when the request is successful
      returns a response object
    when the connection fails
      raises an error
    when the request times out
      raises an error

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) Proofing::LexisNexis::InstantVerify::Proofer#proof proofing failures that allow additional verification the result fails for a reason other than a failure to match attributes returns a result that cannot pass with additional verification
     # Not yet implemented
     # ./spec/services/proofing/lexis_nexis/instant_verify/proofing_spec.rb:112

Failures:

  1) FrontendLogger#track_event with unknown event logs with prefix for unknown event
     Failure/Error:
       def initialize(user:)
         @user = user
       end

     ArgumentError:
       missing keyword: :user
     # ./spec/services/idv/analytics_events_enhancer_spec.rb:14:in `initialize'
     # ./spec/services/frontend_logger_spec.rb:14:in `new'
     # ./spec/services/frontend_logger_spec.rb:14:in `block (2 levels) in <top (required)>'
     # ./spec/services/frontend_logger_spec.rb:20:in `block (2 levels) in <top (required)>'
     # ./spec/services/frontend_logger_spec.rb:26:in `block (3 levels) in <top (required)>'
     # ./spec/services/frontend_logger_spec.rb:32:in `block (4 levels) in <top (required)>'

  2) FrontendLogger#track_event with method handler calls method with attributes based on signature
     Failure/Error:
       def initialize(user:)
         @user = user
       end

     ArgumentError:
       missing keyword: :user
     # ./spec/services/idv/analytics_events_enhancer_spec.rb:14:in `initialize'
     # ./spec/services/frontend_logger_spec.rb:14:in `new'
     # ./spec/services/frontend_logger_spec.rb:14:in `block (2 levels) in <top (required)>'
     # ./spec/services/frontend_logger_spec.rb:20:in `block (2 levels) in <top (required)>'
     # ./spec/services/frontend_logger_spec.rb:26:in `block (3 levels) in <top (required)>'
     # ./spec/services/frontend_logger_spec.rb:42:in `block (4 levels) in <top (required)>'

Top 10 slowest examples (34.35 seconds, 17.1% of total time):
  UserAlerts::AlertUserAboutPasswordChange#call sends an email to all of the users confirmed email addresses
    12 seconds ./spec/services/user_alerts/alert_user_about_password_change_spec.rb:5
  RequestPasswordReset#perform when the user is found and confirmed calls irs tracking method forgot_password_email_sent
    3.45 seconds ./spec/services/request_password_reset_spec.rb:77
  RequestPasswordReset#perform when the user is found and confirmed sends a recovery activated push event
    3.35 seconds ./spec/services/request_password_reset_spec.rb:70
  RequestPasswordReset#perform when the user is found and confirmed, but the email address is not does not send a recovery activated push event
    3.32 seconds ./spec/services/request_password_reset_spec.rb:134
  RequestPasswordReset#perform when the user requests password resets above the allowable threshold only sends a push notification when the attempts have not been throttled
    2.52 seconds ./spec/services/request_password_reset_spec.rb:200
  RequestPasswordReset#perform when the user requests password resets above the allowable threshold throttles the email sending and logs a throttle event
    2.13 seconds ./spec/services/request_password_reset_spec.rb:167
  IrsAttemptsApi::AttemptEvent#to_jwe returns a JWE for the event
    1.99 seconds ./spec/services/irs_attempts_api/attempt_event_spec.rb:32
  AccountReset::CreateRequest#call when the user has a phone includes a message_id in the response
    1.9 seconds ./spec/services/account_reset/create_request_spec.rb:20
  IrsAttemptsApi::AttemptEvent.from_jwe returns an event decrypted from the JWE
    1.88 seconds ./spec/services/irs_attempts_api/attempt_event_spec.rb:62
  Idv::InPerson::CompletionSurveySender.send_completion_survey user should receive a survey sends a survey to the user's confirmed email addresses
    1.81 seconds ./spec/services/idv/in_person/completion_survey_sender_spec.rb:25

Top 10 slowest example groups:
  UserAlerts::AlertUserAboutPasswordChange
    12.02 seconds average (12.02 seconds / 1 example) ./spec/services/user_alerts/alert_user_about_password_change_spec.rb:3
  IrsAttemptsApi::AttemptEvent
    1.94 seconds average (3.88 seconds / 2 examples) ./spec/services/irs_attempts_api/attempt_event_spec.rb:3
  RequestPasswordReset
    1.68 seconds average (16.85 seconds / 10 examples) ./spec/services/request_password_reset_spec.rb:3
  AccountReset::CreateRequest
    1.15 seconds average (2.29 seconds / 2 examples) ./spec/services/account_reset/create_request_spec.rb:3
  UserAlerts::AlertUserAboutPersonalKeySignIn
    1.01 seconds average (1.01 seconds / 1 example) ./spec/services/user_alerts/alert_user_about_personal_key_sign_in_spec.rb:3
  UserAlerts::AlertUserAboutNewDevice
    0.9168 seconds average (0.9168 seconds / 1 example) ./spec/services/user_alerts/alert_user_about_new_device_spec.rb:3
  Idv::Steps::InPerson::VerifyStep
    0.81438 seconds average (4.89 seconds / 6 examples) ./spec/services/idv/steps/in_person/verify_step_spec.rb:3
  Idv::InPerson::CompletionSurveySender
    0.72465 seconds average (2.17 seconds / 3 examples) ./spec/services/idv/in_person/completion_survey_sender_spec.rb:3
  EventDisavowal::DisavowEvent
    0.6844 seconds average (0.6844 seconds / 1 example) ./spec/services/event_disavowal/disavow_event_spec.rb:3
  Idv::PhoneStep
    0.64984 seconds average (8.45 seconds / 13 examples) ./spec/services/idv/phone_step_spec.rb:3

Finished in 3 minutes 21.2 seconds (files took 6.04 seconds to load)
1513 examples, 2 failures, 1 pending

Failed examples:

rspec ./spec/services/frontend_logger_spec.rb:31 # FrontendLogger#track_event with unknown event logs with prefix for unknown event
rspec ./spec/services/frontend_logger_spec.rb:41 # FrontendLogger#track_event with method handler calls method with attributes based on signature

Randomized with seed 11146

Coverage report generated for RSpec to /home/jmax/projects/identity-idp/coverage. 10220 / 29286 LOC (34.9%) covered.
Stopped processing SimpleCov as a previous error not related to SimpleCov has been detected
