
Randomized with seed 57671

Proofing::Aamva::HmacSecret
  #base64digest
    should return a decoded PSHA1 hash

ServiceProviderUpdater
  #run
    dashboard has the old singular cert attribute
      ignores the old column
    GET request to dashboard raises an error
      logs error and does not affect registry
    dashboard is not available
      logs error and does not affect registry
    dashboard is available
      ignores attempts to alter native Service Providers
      updates certs (plural)
      updates existing dashboard-provided Service Providers
      creates new dashboard-provided Service Providers
      updates redirect_uris
      removes inactive Service Providers
    a non-native service provider is invalid
      raises an error

ParseControllerFromReferer
  #call
    when the referer is present
      returns the corresponding controller and action
    when the referer is nil
      returns "no referer" string

RedisRateLimiter
  #increment
    sets the TTL of the key to interval minus 1
    when the key exists in redis
      increments the value
    when the key does not exist in redis
      sets the value to 1 when
  #attempt!
    raises an error and does not run the block when the limit has been hit
    calls the block when the limit has not been hit
  #maxed?
    when the key exists and is at the limit
      is true
    when the key does not exist in redis
      is false
    when the key exists and is under the limit
      is false

DocAuthRouter
  .client
    other config
      errors
    for acuant
      is a translation-proxied acuant client
    for lexisnexis
      is a translation-proxied lexisnexis client
  DocAuthRouter::DocAuthErrorTranslatorProxy
    logs a warning for errors it does not recognize and returns a generic error
    translates individual error keys errors
    translates generic network errors
    translates http response errors and maintains exceptions
    translates generic network errors
    translates errors using the normal doc auth translator
  .doc_auth_vendor
    with a discriminator that hashes inside the test group
      is the alternate vendor
      with randomize false
        is the original vendor
    with a nil discriminator
      is the default vendor, and logs analytics events
    with a discriminator that hashes outside the test group
      is the original

Idv::DataUrlImage
  #initialize
    with bad data
      raises an error
  #read
    returns the data associated with the image
    with base64-encoded content
      returns the data associated with the image

PhoneFormatter
  #format
    uses the international code for the country specified in the country code option
    returns nil for nil
    formats U.S. numbers correctly
    formats international numbers correctly
    returns nil for nonsense
    uses +1 as the default international code

Idv::DuplicateSsnFinder
  #ssn_is_unique?
    when the ssn is unique
      is expected to eq true
    when ssn is already taken by another profile
      recognizes fingerprint regardless of HMAC key age
      returns false
    when ssn is already taken by same profile
      is valid
      recognizes fingerprint regardless of HMAC key age

DateParser
  .parse_legacy
    with an international style date
      is expected to eq Thu, 31 Dec 1970
    with something that is not a date
      blows up
    it passes through date objects
      is the date
    single digit american date month and year
      is expected to eq Sun, 01 Feb 1970
    with an american style date
      is expected to eq Thu, 31 Dec 1970

DataRequests::CreateEmailAddressesReport
  #call
    returns an array with hashes representing the users email addresses

Idv::Steps::InPerson::SsnStep
  #call
    merges ssn into pii session value
    with service provider device profiling disabled
      with proofing device profiling collecting disabled
        does not add a session id to flow session
    with service provider device profiling disabled
      with proofing device profiling collecting enabled
        does not add a session id to flow session
        does not change threatmetrix_session_id when updating ssn
    with service provider device profiling enabled
      with proofing device profiling collecting disabled
        still adds a session id to flow session
    with existing session applicant
      clears applicant
    with service provider device profiling enabled
      with proofing device profiling collecting enabled
        does not change threatmetrix_session_id when updating ssn
        adds a session id to flow session

Encryption::KmsClient
  #encrypt
    logs the context
    with KMS enabled
      with multi region disabled
        encrypts with KMS legacy single region
      with multi region enabled
        encrypts with KMS multi region
    with KMS disabled
      encrypts with a local key
  #decrypt
    logs the context
    with a contextless ciphertext
      created with a local key
        delegates to the contextless kms client
      created with KMS
        delegates to the contextless kms client
    with a ciphertext encrypted with KMS multi region
      decrypts the ciphertext with KMS
    with a ciphertext encrypted with a local key
      decrypts the ciphertext with a local key

Idv::Actions::VerifyDocumentStatusAction
  #call
    with document capture session with no result
      calls analytics
    with no document capture session
      calls analytics
    successful async result
      adds costs
      calls analytics to log the successful event
      assigns session variables
      with barcode attention result
        assigns session variables
      unbilled
        adds costs
      with existing applicant
        clears applicant

EncryptedAttribute
  #new
    raises an error if unable to decrypt with any keys
    automatically decrypts using old key
    automatically decrypts
  #new_from_decrypted
    automatically encrypts
  #stale?
    returns false when email was encrypted with current key
    returns true when email was encrypted with old key

Encryption::Encryptors::SessionEncryptor
  #encrypt
    returns a KMS wrapped AES encrypted ciphertext
    sets an encryption context
  #decrypt
    decrypts the ciphertext

RevokeServiceProviderConsent
  #call
    clears the verified attributes
    sets the deleted_at

X509::Attributes
  #new_from_json
    returns all-nil object when passed blank JSON
    inflates from JSON string
  #new_from_hash
    initializes from plain Hash
    initializes from complex Hash
    assigns to all members
    ignores unknown keys

GpoConfirmation
  #entry
    stores the entry as an encrypted json string
    retrieves the entry as an unencrypted hash with symbolized keys

EncryptedDocumentStorage::S3Storage
  #write_image
    writes the document to S3

Idv::Steps::InPerson::AddressStep
  #call
    with values submitted
      sets values in flow session

PushNotification::IdentifierRecycledEvent
  #payload
    is a subject with an email
  #event_type
    is the RISC event type

DocAuth::LexisNexis::Requests::TrueIdRequest
  with acuant image source
    behaves like a successful request
      uploads the image and returns a successful result
  with unknown image source
    behaves like a successful request
      uploads the image and returns a successful result

Idv::InheritedProofing::ServiceProviderServices
  #inherited_proofing_service_for
    when there is a va inherited proofing request
      when va mock proofing is turned off
        returns the correct service provider service class
      when va mock proofing is turned on
        returns the correct service provider service class
  #inherited_proofing_service_class_for
    when the inherited proofing class cannot be identified
      raises an error
    when there is a va inherited proofing request
      when va mock proofing is turned on
        returns the correct service provider service class
      when va mock proofing is turned off
        returns the correct service provider service class
    when va inherited proofing is disabled
      raises an error

Agreements::Reports::PartnerApiReport
  #good_job_concurrency_key
    is the job name and the date
  #perform
    runs a series of reports

StoreSpMetadataInSession
  #call
    when IAL2 and phishing-resistant are requested
      sets the session[:sp] hash
    when IAL2 and AAL3 are requested
      sets the session[:sp] hash
    when a ServiceProviderRequestProxy is not found
      does not set the session[:sp] hash
    when a ServiceProviderRequestProxy is found
      sets the session[:sp] hash

Proofing::Aamva::Applicant
  should format dob into CCYY-MM-DD form
  should format empty or malformed dobs into empty strings
  .from_proofer_applicant(applicant)
    should create an AAMVA applicant with necessary proofer applcant data

DocAuth::Acuant::Responses::CreateDocumentResponse
  contains the instance_id from the response

PushNotification::EmailChangedEvent
  #event_type
    is the RISC event type
  #payload
    is a subject with an email

Db::AddDocumentVerificationAndSelfieCosts
  has costing for front, back, but not result when not billed
  has costing for front, back, and result when billed

Idv::Steps::VerifyWaitStepShow
  #call
    moves to the next page
    clears pii from session
    adds costs
    when there is no document capture session ID
      returns to the verify page
    when there is no document capture session
      deletes the document capture session and returns to the verify page
    when verification encounters an exception
      marks the verify step incomplete and redirects to the exception page
    when verification fails
      marks the verify step incomplete and redirects to the warning page
    when the proofing session result is missing
      deletes the document capture session and returns to the verify page

Idv::Steps::SsnStep
  #call
    when pii_from_doc is not present
      marks previous step as incomplete
    with valid ssn
      merges ssn into pii session value
      logs attempts api event
      with service provider device profiling enabled
        with proofing device profiling collecting disabled
          still adds a session id to flow session
      with existing session applicant
        clears applicant
      with service provider device profiling disabled
        with proofing device profiling collecting enabled
          does not add a session id to flow session
          does not change threatmetrix_session_id when updating ssn
      with service provider device profiling enabled
        with proofing device profiling collecting enabled
          adds a session id to flow session
          does not change threatmetrix_session_id when updating ssn
      with service provider device profiling disabled
        with proofing device profiling collecting disabled
          does not add a session id to flow session

DocAuth::Acuant::ResultCodes
  .from_int
    is nil when there is no matching code
    is a result code for the int

SendSignUpEmailConfirmation
  #call
    updates the confirmation values on the email address for the user
    sends the user an email with a confirmation link and the request id
    when the user already has a confirmation token
      regenerates a token if the token is expired
    when resetting a password
      sends an email with a link to try another email if the current email is unconfirmed

DatabaseHealthChecker
  .check
    when the database is unhealthy
      returns an unhealthy check
      notifies NewRelic
    when the database is healthy
      returns a healthy check

VendorStatus
  raises an error if passed an unknown vendor
  when a non-ial2 vendor has an outage
    correctly reports no ial2 vendor outage
  when any vendor has an outage
    correctly reports a vendor outage when voice is offline
    correctly reports a vendor outage when sms is offline
    correctly reports a vendor outage when lexisnexis_instant_verify is offline
    correctly reports a vendor outage when acuant is offline
    correctly reports a vendor outage when lexisnexis_trueid is offline
  #all_vendor_outage?
    is expected to eq false
    with parameters
      is expected to eq false
      with outage on all vendors
        is expected to eq true
    with outage on all vendors
      is expected to eq true
  when all vendors are operational
    correctly reports no vendor outage
    correctly reports no ial2 vendor outage
  when an ial2 vendor has an outage
    correctly reports an ial2 vendor outage
    user coming from create_account
      returns the correct message
    user coming from idv flow
      no service_provider in session
        returns the correct message
      with service_provider in session
        returns the correct message tailored to the service provider
  #track_event
    logs status of all vendors
  #outage_message
    phone vendor outage
      returns default phone outage message
      from idv
        returns idv phone outage message
  #all_phone_vendor_outage?
    is expected to eq false
    with outage on a phone vendor
      is expected to eq false
    with outage on all phone vendors
      is expected to eq true
  #any_phone_vendor_outage?
    is expected to eq false
    with outage on a phone vendor
      is expected to eq true

UserAlerts::AlertUserAboutAccountVerified
  #call
    sends an email to all confirmed email addresses

PushNotification::AccountPurgedEvent
  #payload
    is a subject with the provided iss_sub
  #event_type
    is the RISC event type

UserAlerts::AlertUserAboutPasswordChange
  #call
    sends an email to all of the users confirmed email addresses

Idv::Steps::InPerson::StateIdStep
  #call
    with values submitted
      sets values in flow session
      receives hash dob
        converts the date when setting it in flow session
  #extra_view_variables
    first name is set
      returns extra view variables
    first name and dob are set
      returns extra view variables
    dob is set
      returns extra view variables

Pii::Fingerprinter
  #verify_current
    returns true for identical fingerprints
    returns false for unequal fingerprints
  #verify_queue
    returns true for old key
    returns false for unequal fingerprints
  #fingerprint
    returns a 256 bit string
  #stale?
    returns true if hashed with old key
    returns true if the fingerprint is nil and the text is not
    return false if hashed with current key
  #verify
    returns false for unequal fingerprints
    returns true for old key
    returns true for identical fingerprints

Idv::ProfileMaker
  #save_profile
    creates an inactive Profile with encrypted PII
    with an initiating service provider
      creates a profile with the initiating sp recorded
    as active
      creates an active profile
    with deactivation reason
      creates an inactive profile with deactivation reason

SamlEndpoint
  .suffixes
    should list the suffixes that are configured
  endpoint_configs
    should return an array of parsed endpoint config data
  #saml_metadata
    does not include the SingLogoutService endpoints when configured
    returns the saml metadata with the suffix added to the urls
    includes the SingLogoutService endpoints when configured
  #secret_key
    returns the key loaded from the file system
    when the key file does not exist
      raises an error
  #x509_certificate
    returns the x509 cert loaded from the filesystem

Agreements::IntegrationStatusSeeder
  .run
    updates a record if one exists
    creates new records if none exist

DocAuth::Acuant::Requests::GetResultsRequest
  #fetch
    sends a request and return the response

Idv::Steps::InPerson::VerifyWaitStepShow
  #call
    moves to the next page
    adds costs
    clears pii from session
    when verification encounters an exception
      marks the verify step incomplete and redirects to the exception page
    when there is no document capture session
      deletes the document capture session and returns to the verify page
    when the proofing session result is missing
      deletes the document capture session and returns to the verify page
    when there is no document capture session ID
      returns to the verify page
    when verification fails
      marks the verify step incomplete and redirects to the warning page

OpenidConnectAttributeScoper
  #requested_attributes
    with profile
      is the array of attributes corresponding to the scopes
    with profile
      is the array of attributes corresponding to the scopes
  #filter
    with email scope
      includes the email and email_verified attributes
    minimum scope
      is only sub and iss
    with address scope
      includes the address attribute
    with phone scope
      includes the phone and email_verified attributes
    with profile:birthdate scope
      includes name attributes
    with profile scope
      includes name attributes and birthdate
    with social_security_number scope
      includes social_security_number
    with profile:name scope
      includes name attributes
    with profile:verified_at scope
      includes the verified_at attribute
    with the all_emails scope
      includes the all_emails attributes
  #scopes
    with a string of space-separate scopes
      parses scopes
    with an array
      filters the array

Proofing::Aamva::Request::AuthenticationTokenRequest
  #url
    should be the AAMVA authentication url
  #body
    should be a signed request body
  #send
    when the connection fails
      raises an error
    when the request is successful
      returns a response object
    when the request times out
      raises an error
  #headers
    should return valid SOAP headers
  #timeout
    reads from the config object

Proofing::Base
  .required_attributes
    stores the required attributes and exposes them via `required_attributes`
  .proof
    when logic is a symbol
      stores the proof logic and exposes it via `proofer`
    when logic is a block
      stores the proof logic and exposes it via `proofer`
  #validate_attributes
    when optional attributes are booleans
      does not raise
    when all attributes are present
      does not raise
    when attributes are not present
      raises
    when optional attributes are not present
      does not raise
  .stage
    stores the stage and exposes it via `stage`
  .optional_attributes
    stores the optional attributes and exposes them via `optional_attributes`
  .attributes
    does not raise if optional attributes are not specified
    returns the list of combined required and optional attributes
  #proof
    when the logic is specified as a symbol
      returns a successful result
    when another proofer exists
      does not affect the other proofer
    when proofing succeeds
      returns a successful result
    when proofing fails
      returns a failed result
    when required attributes are missing
      returns a result with an exception
    when proofing causes an exception
      notifies NewRelic
      returns a result with an exception
    when the logic calls an instance method
      returns a successful result
  #restrict_attributes
    is a hash containing only the keys listed in attributes
  .vendor_name
    stores the name and exposes it via `vendor_name`

DocumentCaptureSessionAsyncResult
  success?
    with incomplete result
      is false
    with complete result
      with unsuccessful result
        is false
      with successful result
        is true
  attention_with_barcode?
    is expected to eq false
    with complete result
      is expected to eq false
      with attention with barcode result
        is expected to eq true

DocAuth::Acuant::Requests::CreateDocumentRequest
  #fetch
    acuant sdk image source
      sends a well formed request and returns a response with the instance ID
    upload image source
      sends a well formed request and returns a response with the instance ID

Db::Identity::SpUserCounts
  returns the total user counts per sp broken down by ial1 and ial2
  is empty

HealthCheckSummary
  #as_json
    is the JSON representation
  #healthy?
    is healthy

Idv::AnalyticsEventsEnhancer
  calls analytics method with original and decorated attributes
  includes decorated methods
  with anonymous analytics user
    calls analytics method with original and decorated attributes
  with proofing component
    calls analytics method with original and decorated attributes

KeyRotator::HmacFingerprinter
  #rotate
    changes email fingerprint if no active profile
    does not change the `updated_at` timestamp
    changes email and ssn fingerprints

ResetUserPassword
  #call
    changes the password
    creates a password_invalidated user event
    notifies the user via email to each of their email addresses
    clears all remembered browsers by updating the remember_device_revoked_at timestamp

Proofing::Mock::ResolutionMockClient
  #proof
    with a simulated failed to contact by first name
      returns an unsuccessful result with exception
    with a simulated failed to contact by SSN
      returns an unsuccessful result with exception
    with a first name that does not match
      returns a proofing failed result
    with a passing applicant
      returns a passed result
    with an SSN that does not match
      returns a proofing failed result
    with a simulated timeout by name
      returns a timed out result with exception
    with a zipcode that does not match
      returns a proofing failed result

EncryptedRedisStructStorage
  .load
    returns nil if no data exists
    with an empty id
      is nil
    with a keyword init struct
      loads the value out of redis
    with an ordered initializer struct
      loads the value out of redis
    with a struct that does not have a redis_key_prefix
      raises an error with a message describing what to define
  .key
    with a struct that does not have a redis_key_prefix
      raises an error with a message describing what to define
    with a struct that has a redis_key_prefix
      prefixes the id
  .init_fields
    does not blow up with unknown keys
  .store
    with a struct that has an id
      stores the value with a ttl (expiration)
      writes encrypted data to redis
      with an empty id
        errors
      with funky ASCII data inside the struct
        converts the data and stores it
    with a struct that does not have an id method
      throws an error describing the missing method

EventDisavowal::FindDisavowedEvent
  #call
    an event exists
      returns the event
    an event exists with a disavowal token fingerprinted with an old key
      returns the event
    an event does not exist
      returns nil

Proofing::LexisNexis::PhoneFinder::VerificationRequest
  #body
    returns a properly formed request body
    without a uuid_prefix
      does not prepend
  behaves like a lexisnexis request
    #http_headers
      contains the content type
    #send
      returns a response object initialized with the http response
      includes the basic auth header
  #url
    returns a url for the Phone Finder endpoint

Idv::Steps::DocumentCaptureStep
  #extra_view_variables
    with native camera A/B testing enabled
      includes the A/B testing variables to be passed to the view
  #call
    does not raise an exception when stored_result is nil

Agreements::Db::SpReturnLogScan
  .call
    scans through the sp_return_logs table and yields the block for each record

Db::Identity::SpActiveUserCounts
  returns total active user counts per sp broken down by ial1 and ial2 for ial1 ial2 sps
  is empty
  returns total active user counts per sp broken down by ial1 and ial2 for ial2 only sps
  returns total active user counts per sp broken down by ial1 and ial2 for ial1 only sps

ArcgisApi::Geocoder
  #suggest
    returns an error with Status coded as 4** in HTML
    returns suggestions
    returns an error response body but with Status coded as 200
  #find_address_candidates
    handles no results
    returns an error response body but with Status coded as 200
    returns candidates from magic_key
  #retrieve_token!
    reuses the cached token across instances
    implicitly refreshes the token when expired
    sets token and token_expires_at
    reuses the cached token on subsequent requests
    calls the endpoint with the expected params

Idv::ProofingComponentsLogging
  #as_json
    returns hash with nil values omitted

DocAuth::LexisNexis::Responses::TrueIdResponse
  #billed?
    with doc auth result of Unknown
      is expected to eq true
    with no doc auth result
      is expected to eq false
    with doc auth result of Attention
      is expected to eq true
    with doc auth result of Passed
      is expected to eq true
  when the dob is incorrectly parsed
    does not throw an exception when getting pii from doc
  #parse_date
    handles an invalid month
    handles a day past the end of the month
    handles an invalid leap day
  when the barcode can not be read
    includes issued date
    has PII data
    has no error messages
    is a successful result
    has extra attributes
    includes expiration
  when front image HDPI is too low
    returns an unsuccessful response with front DPI error
  when response is unexpected
    produces reasonable output for a TrueID failure without details
    is not billed
    produces reasonable output for a malformed TrueID response
    produces reasonable output for communications error
    produces reasonable output for internal application error
  when the response is a success
    is a successful result
    includes expiration
    excludes unnecessary raw Alert data from logging
    has no error messages
    excludes pii fields from logging
    has PII data
    includes issued date
    produces expected hash output
    has extra attributes
  #attention_with_barcode?
    is expected to eq false
    with multiple errors including barcode attention
      is expected to eq false
    with single barcode attention error
      is expected to eq true
  when response is not a success
    returns Failed for visible_pattern when it gets passed and failed value
    produces appropriate errors without liveness
    produces expected hash output

Encryption::Encryptors::PiiEncryptor
  #decrypt
    uses layered AES and KMS to decrypt the contents
    requires the same password used for encrypt
    returns the original text
  #encrypt
    returns encrypted text
    uses layers KMS and AES to encrypt the plaintext
  Encryption::Encryptors::PiiEncryptor::Ciphertext
    .parse_from_string
      does not blow up with unknown/new keys

SecureHeadersAllowList
  .csp_with_sp_redirect_uris
    handles sp_redirect_uris with nil elements
    properly reduces mobile uris
    handles nil sp_redirect_uris
    properly reduces web uris
    handles URLs that include URL fragments

DocAuth::Acuant::AcuantClient
  #post_images
    when results pass
      sends an upload image request for the front and back DL images
    when the results return failure
      returns a FormResponse with failure
  #post_back_image
    sends an upload image request for the back image
  #post_front_image
    sends an upload image request for the front image
  #create_document
    sends a create document request with cropping mode
    invalid cropping mode
      raises an error
  #get_results
    when the result is a failure
      sends a request to get the results and returns failure
    when the result is a pass
      sends a request to get the results and returns success
  when there is a networking error
    returns a response with an exception
  when the request is not successful
    returns a response with an exception

DocAuth::Mock::ResultResponse
  with a yaml file containing a passing result
    returns a passed result
  with a yaml file containing a read error
    returns caution result
  with string data that is not a URI or a hash
    returns an error response that explains it should have been a hash
  with a yaml file containing PII
    returns a result with that PII
  with a yaml file containing an unknown alert
    calls the warn_notifier
  with a yaml file containing integer zipcode
    returns a result with string zipcode
  with a yaml file containing PII and an american-style date
    returns a result with that PII
  with an image file
    returns a successful response with the default PII
  with a malformed yaml file
    returns a result with the appopriate error
  with a data URI
    returns a successful response with the default PII
  with a yaml file containing barcode attention
    returns a successful result
  with a yaml file containing a failed alert
    returns a result with that error
  with a yaml file containing a failed result
    returns a failed result
  with URI that is not a data URI
    returns an error response that explains it should have been a data URI
  with a yaml file containing a failed alert
    returns a result with that error

MultiHealthChecker
  #check
    with a single unhealthy checker
      returns a healthy result
    with all healthy checkers
      returns a healthy result
      returns a JSON-ready summary

Throttle
  #throttled_else_increment?
    throttle has hit limit
      is true
    throttle has not hit limit
      is false
      increments the throttle
  #reset
    resets attempt count to 0
  #increment!
    increments attempts
  .new
    throws an error when neither user nor target are provided
    throws an error when both user and target are provided
    throws an error for an invalid throttle_type
    when target is a string
      target is not a string
        raises an error
  .max_attempts
    returns configured attempt window for throttle type
    is indifferent to throttle type stringiness
  #remaining_count
    returns zero when throttle limit is reached
    returns maximium remaining attempts with zero attempts
  #expires_at
    with active throttle
      returns expiration time
    without having attempted
      returns current time
    with expired throttle
      returns expiration time
  #throttled?
    returns false if the attempts <= max_attempts but the window is expired
    returns true if throttled
    returns false if the attempts < max_attempts
  .attempt_window_in_minutes
    is indifferent to throttle type stringiness
    returns configured attempt window for throttle type

Encryption::Encryptors::AttributeEncryptor
  #encrypt
    returns encrypted text
  #stale?
    returns false if the current key last was used to decrypt something
    returns true if old key used to decrypt and we turn on new encryption
  #decrypt
    with new new non kms based encryption
      with a ciphertext made with the current key
        decrypts the ciphertext
      after rotating keys
        tries to decrypt with successive keys until it is successful
      with a ciphertext made with a key that does not exist
        raises and encryption error

Db::MonthlySpAuthCount::TotalMonthlyAuthCountsWithinIaaWindow
  .call
    is empty with no data
    with data
      counts and uniques auths
    when the SP does not have IAA start/end dates
      skips and returns an empty array
    with only partial months
      counts and uniques auths

DocAuth::ProcessedAlertToLogAlertFormatter
  when ProcessedAlertToLogAlertFormatter is called
    returns failed if both passed and failed are returned by the alert
    returns the formatted log hash

Proofing::Result
  #failed?
    when there is an error and no exception
      is expected to eq true
    when there is no error
      is expected to eq false
    when there is an error AND an exception
      is expected to eq false
  #timed_out?
    when there is a timeout error
      is expected to eq true
    when there is no error
      is expected to eq false
    when there is a generic error
      is expected to eq false
  context
    when provided
      is present
  #success?
    when there is an error AND an exception
      is expected to eq false
    when there is an error and no exception
      is expected to eq false
    when there is no error and no exception
      is expected to eq true
  transaction_id
    when provided
      is present
  reference
    when provided
      is present
  #add_error
    with no key
      behaves like add_error
        returns itself
        adds an error under the key
        does not add duplicate error
    with a key
      behaves like add_error
        does not add duplicate error
        adds an error under the key
        returns itself
  #exception?
    when there is no exception
      is expected to eq false
    when there is an exception
      is expected to eq true

Agreements::PartnerAccountStatusSeeder
  .run
    updates a record if one exists
    creates new records if none exist
    with bad file
      raises the appropriate error

Encryption::KmsLogger
  .log
    with a context
      logs the context
    without a context
      logs that an encryption happened without a context
  .logger
    is a logger

Encryption::UakPasswordVerifier
  Encryption::UakPasswordVerifier::PasswordDigest
    .parse_from_string
      raises an encryption error when the password digest is nil
      does not blow up with unknown/new keys
  .digest
    creates a digest from the password
  .verify
    returns true if the password matches
    returns false for nonsese
    allows verification of a legacy password with a 20 byte salt
    returns false if the password does not match

Idv::InheritedProofing::ServiceProviderForms
  #inherited_proofing_form_for
    when there is a va inherited proofing request
      returns the correct form
    when the inherited proofing request cannot be identified
      raises an error

Proofing::ResolutionResultAdjudicator
  #adjudicated_result
    LexisNexis passes and AAMVA fails
      returns a failed response
    LexisNexis fails and AAMVA state is unsupported
      returns a failed response
    LexisNexis fails with attributes covered by AAMVA response
      returns a successful response
    LexisNexis fails with attributes not covered by AAMVA response
      returns a failed response
    AAMVA and LexisNexis both pass
      returns a successful response

AttributeAsserter
  #build
    verified user and IAL1 AAL3 request
      service provider configured for AAL3
        creates a getter function for aal attribute
        includes aal
      service provider requests AAL3
        includes aal
        creates a getter function for aal attribute
    unverified user and IAL2 request
      behaves like unverified user
        custom bundle includes email, phone
          only includes UUID, email, aal, and ial
        custom bundle includes all_emails
          includes all the user email addresses
        custom bundle does not include email, phone
          only includes UUID, aal, and ial
    verified user and IAL1 request
      Service Provider specifies empty bundle
        only includes UUID, aal, and ial
      custom bundle has invalid attribute name
        silently skips invalid attribute name
      custom bundle includes email, phone, and first_name
        gets UUID (MBUN) from Service Provider
        does not create a getter function for IAL1 attributes
        only includes uuid, email, aal, and ial (no verified_at)
      x509 attributes included in the SP attribute bundle
        user presented piv/cac
          includes x509_subject x509_issuer and x509_presented
        user did not present piv/cac
          does not include x509_subject x509_issuer and x509_presented
      Service Provider does not specify bundle
        authn request specifies bundle with first_name, last_name, email, ssn, phone
          only includes uuid, email, aal, and ial
        authn request does not specify bundle
          only includes uuid, aal, and ial
      custom bundle includes verified_at
        the service provider is ial1
          only includes uuid, email, aal, and ial (no verified_at)
        the service provider is ial2
          includes verified_at
    IALMAX
      service provider requests IALMAX with IAL1 user
        includes ial
        creates a getter function for ial attribute
      service provider requests IALMAX with IAL2 user
        creates a getter function for ial attribute
        includes ial
    verified user and IAL2 request
      custom bundle has invalid attribute name
        silently skips invalid attribute name
      Service Provider specifies empty bundle
        only includes uuid, verified_at, aal, and ial
      Service Provider does not specify bundle
        authn request does not specify bundle
          only returns uuid, verified_at, aal, and ial
        authn request specifies bundle
          uses authn request bundle
      custom bundle includes zipcode
        formats zipcode as 5 digits
      bundle includes :ascii
        skips ascii as an attribute
        transliterates attributes to ASCII
      custom bundle includes email, phone, and first_name
        formats the phone number as e164
        creates getter function
        includes all requested attributes + uuid
        gets UUID (MBUN) from Service Provider
      x509 attributes included in the SP attribute bundle
        user presented piv/cac
          includes x509_subject x509_issuer x509_presented
        user did not present piv/cac
          does not include x509_subject, x509_issuer, and x509_presented
      custom bundle includes dob
        formats the dob in an international format
    unverified user and LOA1 request
      behaves like unverified user
        custom bundle includes email, phone
          only includes UUID, email, aal, and ial
        custom bundle does not include email, phone
          only includes UUID, aal, and ial
        custom bundle includes all_emails
          includes all the user email addresses

Agreements::IaaOrderSeeder
  .run
    raises the appropriate error message if the integration issuer is invalid
    creates new IaaOrders if none exist
    updates a record if one exists
    creates new IntegrationUsages if none exist

Pii::ReEncryptor
  #perform
    re-encrypts PII when supplied with raw PII and explicit profile
    re-encrypts PII using new code

Proofing::Aamva::AuthenticationClient
  #fetch_token
    should use the token mutex
    when the auth token is nil
      should send an authentication request then save and return the token
    when the auth token is present and expired
      should send an authentication request then save and return the token
    when the auth token is present and fresh
      should return the auth token

Idv::Agent
  instance
    #proof_address
      proofs addresses successfully with valid information
      fails to proof addresses with invalid information
    #proof_resolution
      returns an unsuccessful result and notifies exception trackers if an exception occurs
      proofing state_id disabled
        does not proof state_id if resolution succeeds
        does not proof state_id if resolution fails
        returns a successful result if SSN does not start with 900 but is in SSN allowlist
      proofing state_id enabled
        does proof state_id if resolution succeeds
        still proofs state_id if resolution fails

BackupCodeGenerator
  should reject invalid codes
  should generate backup codes and be able to verify them
  creates different salts for different batches
  filters out profanity
  generates 12-letter/digit codes via base32 crockford
  creates codes with the same salt for that batch

UpdateUser
  #call
    updates the user with the passed in attributes
    with no phone configured
      creates a phone configuration
      sends a recovery information changed event
    with a phone already configured
      does not delete the phone configuration
    when creating a new phone
      when phone is set as default
        updates made_default_at timestamp with current date and time
      when phone is not set as default
        updates made_default_at with nil value
      when phone is not set as default
        updates made_default_at with nil value
    when updating an existing phone
      when phone does not belong to user
        does not update the user if the phone does not belong to them
      when phone is set as default
        updates made_default_at timestamp with current date and time
      when phone is not set as default
        updates made_default_at timestamp with current made_default_at date and time

UuidReporter
  .run
    with valid inputs
      generates the correct csv
  .new
    raises the appropriate error when the email file contains an invalid email
    raises the appropriate error when the output file exists
    raises the appropriate error with missing email file
    raises the appropriate error with missing sp file
    raises the appropriate error when the sp file contains an invalid issuer
    raises the appropriate error when the sp file contains an SPs from multiple agencies

DataRequests::WriteUserEvents
  #call
    writes a file with event information

Encryption::Encryptors::AesEncryptor
  #encrypt
    returns encrypted text
  #decrypt
    requires same password used for encrypt
    returns original text

GpoConfirmationUploader
  #clear_confirmations
    deletes the provided confirmations
  #upload_export
    uploads the export via sftp
    does not upload when GPO upload is disabled
  #run
    when successful
      uploads the psv, creates a file, uploads it via SFTP, and deletes and logs it after
    when there is an error
      notifies NewRelic and does not clear confirmations if SFTP fails
  #generate_export
    generates an export using the GpoConfirmationExporter and all current GpoConfirmations

AccountReset::GrantRequestsAndSendEmails
  #perform
    after not waiting the full wait period
      does not send notifications after a request
      does not send notifications when the request was cancelled
    after waiting the full wait period
      sends 2 notifications after 2 requests are granted
      does not send notifications when the request was cancelled
      does not send notifications when the notifications were already sent
      sends notifications after a request is granted
  #good_job_concurrency_key
    is the job name and the current time, rounded to the nearest 5 minutes

Proofing::LexisNexis::InstantVerify::VerificationRequest
  #url
    returns a url for the Instant Verify endpoint
  #body
    returns a properly formed request body
    without a uuid_prefix
      does not prepend
    with an international-formatted dob
      formats the DOB correctly
    without an address line 2
      sets StreetAddress2 to and empty string
  behaves like a lexisnexis request
    #http_headers
      contains the content type
    #send
      returns a response object initialized with the http response
      includes the basic auth header

UriService
  .params
    parses params out as a hash from a URI
  .add_params
    adds params to uris and escapes them correctly
    is nil with a blank string uri
    appends to existing query parameters
    is nil with a nil uri
    is nil with a bad uri

DataRequests::CreateUserEventsReport
  #call
    returns an array of hashes representing the users events

UspsInPersonProofing::EnrollmentHelper
  #schedule_in_person_enrollment
    an establishing enrollment record exists for the user
      sets enrollment status to pending and sets established at date and unique id
      updates the existing enrollment record
      sends verification emails
      creates usps enrollment
      when the enrollment does not have a unique ID
        uses the deprecated InPersonEnrollment#usps_unique_id value to create the enrollment
    when in-person mocking is enabled
      uses a mock proofer

Proofing::LexisNexis::InstantVerify::Proofer
  #proof
    when an error is raised
      returns a result with an exception
    when the request times out
      retuns a timeout result
    when the response is a not a full match
      is a failure result
    proofing failures that allow additional verification
      the result fails for a reason other than a failure to match attributes
        returns a result that cannot pass with additional verification (PENDING: Not yet implemented)
      and attribute requires additional verification
        returns a result that identifies attribute as needing verification
    when the response is a full match
      is a successful result
  behaves like a lexisnexis proofer
    #proof_applicant
      when proofing succeeds
        results in a successful result
      when proofing fails
        results in an unsuccessful result

Pii::Attributes
  #new_from_hash
    initializes from plain Hash
    initializes from complex Hash
    ignores unknown keys
    assigns to all members
  #new_from_json
    inflates from JSON string
    returns all-nil object when passed blank JSON
  #==
    treats objects with same values as equal

Proofing::Mock::AddressMockClient
  #proof
    with a phone number that fails to match the user
      returns a proofing failed result
    with a phone number that raises an exception
      returns a result with an exception
    with a phone number that times out
      returns a result with a timeout exception
    with a phone number that passes
      returns a successful result

SessionEncryptor
  makes a roundtrip okay across separate instances
  #dump
    encrypts session
  #load
    decrypts encrypted session

UserSessionContext
  .confirmation_context?
    returns false when context is default or reauth context
    returns true when context is confirmation context
  .reauthentication_context?
    returns false when context is default context
    returns true when context is reauthn context
  .authentication_or_reauthentication_context?
    returns true when context is default or reauth context
    returns false when context is confirmation context
  .authentication_context?
    returns true when context is default context
    returns false when context is not default context

ServiceProviderSeeder
  #run
    inserts service providers into the database from service_providers.yml
    updates the plural certs column with the PEM content of certs
    when a service provider already exists in the database
      updates the attributes based on the current value of the yml file
    when the rails environment is not in the service_provider.yml config file
      logs the error
      re-raises the error
    with other existing service providers in the database
      sets approved, active and native on service providers from the yaml
      does not change approve, active and native on the other existing service providers
    when there is a syntax error in the service_provider.yml config file
      re-raises the error
      logs the error
    when running in a production environment
      in prod
        sends New Relic an error if the DB has an SP not in the config
        only writes configs with restrict_to_deploy_env for prod
      in another environment
        does not send New Relic an error if the DB has an SP not in the config
      when a service provider is invalid
        raises an error
      in the staging environment
        sends New Relic an error if the DB has an SP not in the config
        only writes configs with restrict_to_deploy_env for that env, or no restrictions

DataRequests::WriteUserInfo
  #call
    writes a file with user information

Funnel::Registration::AddMfa
  shows user is fully registered after adding an mfa
  shows user is not fully registered with no mfa

Proofing::Aamva::SoapErrorHandler
  error_message
    when there is an error without a ProgramException section
      is expected to eq "A FooBar error occurred"
    when there is an error without a message
      is expected to include "A SOAP error occurred"
    when there is an error
      contains relevant parts of the error message
    when there is no error
      is expected to eq nil
  error_present?
    when an error is present
      is expected to eq true
    when an error is not present
      is expected to eq false

Agreements::Reports::AgencyIaasReport
  uploads the JSON serialization of the passed partner accounts
  #report_path
    nests the report under the downcased agency abbreviation

Proofing::LexisNexis::Ddp::VerificationRequest
  #body
    returns a properly formed request body
    without an address line 2
      sets StreetAddress2 to and empty string
  #url
    returns a url for the DDP session query endpoint

IdentityLinker
  #link_identity
    can link two different clients to the same rails_session_id
    rejects bad attributes names
    updates user's last authenticated identity
    does not link to an identity record if the provider is nil
    can take an additional optional attributes
    clear_deleted_at
      clear_deleted_at is nil
        nulls out deleted_at
      clear_deleted_at is true
        nulls out deleted_at
    identity.last_consented_at
      updates last_consented_at when present
      does override a previous last_consented_at by default

Idv::Steps::SendLinkStep
  the return value from #call
    includes the telephony response

ReactivateAccountSession
  #decrypted_pii
    returns nil as a default
    returns the pii stored in the session
  #suspend
    sets the reactivate account object back to its defaults
  #clear
    deletes the reactivate account session object from user_session
  #start
    sets the session object `active` flag to true
  #store_decrypted_pii
    stores the supplied object in the session and toggles `validated_personal_key` flag
  #started?
    returns a boolean if the account reactivate flow has started or not
    initializes set to false
  #validated_personal_key?
    defaults to false
    returns a boolean indicating if the user hsa validated their personal key

PhoneConfirmation::ConfirmationSession
  #expired?
    returns true if the OTP is expired
    returns false if the OTP is not expired
  #regenerate_otp
    returns a copy with a new OTP and expiration
  .start
    starts a session for voice
    starts a session for sms
  #matches_code?
    returns false if the code does not match
    returns true if the code matches with different case
    uses a secure comparison
    returns true if the code matches

FormResponse
  #errors
    initialized with hash
      returns the value of the errors argument
    initialized with ActiveModel::Errors
      returns the messages value of the errors argument
  #success?
    when the success argument is false
      returns false
    when the success argument is true
      returns true
  #to_h
    when errors is an ActiveModel::Errors
      returns a hash with success, errors, and error_details keys
      omits details if errors are empty
      omits details if merged errors are empty
    when the extra argument is nil
      returns a hash with success and errors keys
    when the extra argument is present
      returns a hash with success and errors keys, and any keys from the extra hash
  #merge
    merges errors
    merges hash and ActiveModel::Errors
    merges error details
    merges multiple errors for key
    returns true if one is false and one is true
    merges the extra analytics
  #extra
    returns the extra hash

DocAuth::Acuant::Requests::UploadImageRequest
  with a back image
    uploads the image and returns a successful result
  with a front image
    uploads the image and returns a successful result

DisplayablePiiFormatter
  #format
    #birthdate
      with a YYYY-MM-DD dob
        returns a formatted birdate
      with a MM/DD/YYYY dob
        returns a formatted birdate
    #phone
      without a phone number
        returns nil
      with a phone number
        returns a formatted phone number
    #verified_at
      for a verified user
        returns the date the user was verified
    ial2
      returns formatted ial2 PII
    PIV/CAC attributes
      the user does not have a piv/cac configured
        returns nil for x509_issuer and x509_subject
      the user has a piv/cac configured
        returns x509_issuer and x509_subject
    ial1
      returns formatted ial1 PII
    #address
      with a second address line
        returns a formatted address
      without a second address line
        returns a formatted address

PersonalKeyGenerator
  #normalize
    returns standardized string
  #verify
    returns false for an invalid base32 code
    returns true for the correct code
    treats case insensitively
    forgives user mistaking O for 0
    returns false for the wrong code
    returns false for short code
  #create
    sets the encrypted recovery code digest
    hashes the raw personal key
    generates a phrase of 4 words by default
    allows length to be configured via ENV var
    returns the raw personal key

BannedUserResolver
  the user is banned for all SPs
    returns true for all SPs
  the user is not banned
    returns false
  the user is banned for a single SP
    returns false for the not banned SP
    returns true for the banned SP

Idv::Steps::WelcomeStep
  #call
    with previous establishing in-person enrollments
      cancels all previous establishing enrollments
    without camera
      redirects to no camera error page

DataRequests::LookupUserByUuid
  #call
    when nothing exists for the UUID
      returns nil
    when a user exists with the UUID
      returns the user
    when an identity exists with the UUID
      returns the user for the identity

GpoDailyTestSender
  #otp_from_date
    formats the date as a 10-digit OTP
  #run
    creates a GPO confirmation and code for the current date
    when attempting handle the designated reciver renders an error
      warns and does not blow up (so the calling job can continue normally)
      does not create gpo records

Agreements::Db::IaasByAgency
  returns all agreements encapsulated in an Iaa model grouped by agency

ForgetAllBrowsers
  #call
    updates the remember_device_revoked_at

DocAuth::LexisNexis::LexisNexisClient
  when the request is not successful
    returns a response with an exception
  #get_results
    raises a NotImplemented error
  when there is a networking error
    returns a response with an exception
  #post_back_image
    raises a NotImplemented error
  #post_images
    with acuant image source
      sends an upload image request for the front and back DL images
    when the results return failure
      returns a FormResponse with failure
    with unknown image source
      sends an upload image request for the front and back DL images
  #post_front_image
    raises a NotImplemented error
  #create_document
    raises a NotImplemented error

ImageUploadPresignedUrlGenerator
  #presigned_image_upload_url
    when doc_auth_enable_presigned_s3_urls is enabled
      when run locally
        is a local fake S3 URL
      when run in the datacenter
        is a real S3 url
    when doc_auth_enable_presigned_s3_urls is disabled
      is nil

Proofing::Mock::DdpMockClient
  .stage
    has the same stage as the real proofer
  .required_attributes
    has the same required_attributes as the real proofer
  #proof
    with explicit no_result
      has a nil review status
    with reject
      has a reject status
    with pass
      has a pass status
  .optional_attributes
    has the same optional_attributes as the real proofer

EventDisavowal::DisavowEvent
  #call
    sets disavowed_at

ActiveProfileEncryptor
  #call
    encrypts the profile

Proofing::Mock::StateIdMockClient
  #proof
    with info that triggers an error
      returns an error result
    with info that triggers a failure to match
      returns a failed to match result
    with good info
      returns a passing result
    with a nil state id number
      returns a good result

Idv::PhoneStep
  #failure_reason
    when there are idv attempts remaining
      returns :warning
    when the vendor raises a timeout exception
      returns :timeout
    when there are not idv attempts remaining
      returns :fail
    when the vendor raises an exception
      returns :jobfail
  #submit
    increments step attempts
    records the transaction_id in the cost for failures too
    records the transaction_id in the cost
    succeeds with good params
    fails with bad params
    marks the phone as unconfirmed if it matches 2FA phone
    does not mark the phone as confirmed if it does not match 2FA phone
    does not increment step attempts when the vendor raises an exception
    does not increment step attempts when the vendor request times out

RandomPhrase
  #to_s
    stringifies to space-delimited phrase
    does not contain the letters I L O U
    defaults to word length of 4
  #initialize
    checks for profanity and regenerates a random number when it finds

GpoConfirmationExporter
  #run
    creates psv string

UserAlerts::AlertUserAboutPersonalKeySignIn
  #call
    sends sms and emails to confirmed addresses

Db::MonthlySpAuthCount::TotalMonthlyAuthCounts
  is empty
  returns the total auth counts

AccountReset::FindPendingRequestForUser
  #call
    when a request exists
      is expected to eq #<AccountResetRequest id: 52, user_id: 4520, requested_at: "2022-11-18 16:15:08.788367543 +0100", req...reated_at: "2022-11-18 17:15:08.789445330 +0100", updated_at: "2022-11-18 17:15:08.789445330 +0100">
    when a request exists, but it has been granted
      is expected to be nil
    when a request exists, but it is expired
      is expected to be nil
    when a request does not exist
      is expected to be nil
    when a request exists, but it has been cancelled
      is expected to be nil

AccountReset::CreateRequest
  #call
    when the user has a phone
      includes a message_id in the response
    when the user does not have a phone
      does not include a message_id in the response

EncryptedDocumentStorage::LocalStorage
  #write_image
    writes the document to the disk

Idv::Session
  #initialize
    without idv user session
      initializes user session
    with empty idv user session
      does not initialize user session
    with idv user session
      does not initialize user session
  #method_missing
    allows supported attributes
    disallows un-supported attributes
  #create_profile_from_applicant_with_password
    with phone verifed by vendor
      completes the profile if the user has completed OTP phone confirmation
      does not complete the profile if the user has not completed OTP phone confirmation
      with establishing in person enrollment
        creates a USPS enrollment
        sets profile to pending in person verification
    with gpo address verification
      sets profile to pending gpo verification
    without a confirmed phone number
      does not complete the user profile
  #phone_confirmed?
    returns false if the user has not confirmed the phone
    returns false if neither the user nor the vendor has confirmed the phone
    returns true if the user and vendor have confirmed the phone
    returns false if the vendor has not confirmed the phone
  #address_mechanism_chosen?
    returns false if the user has not selected phone or gpo address verification
    returns true if the user has selected gpo address verification
    phone verification chosen
      returns true if the vendor has confirmed the phone number
      returns false if the vendor has not confirmed the phone number
  #respond_to_missing?
    disallows un-supported attributes
    allows supported attributes

DataRequests::CreateUserReport
  returns a report containing information about
  with a requesting SP issuer provided
    includes the ID of the user if the user is not associated with the agency
    includes the UUID for a SP if one exists

Proofing::LexisNexis::Ddp::Proofer
  #send
    when the request times out
      raises a timeout error
    when the request is made
      it looks like the right request
  #proof
    when the response is a full match
      is a successful result

AccountReset::CancelRequestForUser
  #call
    does not cancel account reset requests for a different user
    sends an email to the user's confirmed email addresses
    cancels the account reset request

Proofing::LexisNexis::VerificationErrorParser
  #parsed_errors
    should return an array of errors from the response

UserSeeder
  .run
    defaults to the value in Identity::Hostdata.env
    raises the appropriate error when running in staging
    raises the appropriate error when running in prod
    with valid inputs
      creates verified users
      returns the number of users created
      creates the right number of users
      saves the credentials to a CSV
    when an email address is already taken
      does not persist any users
      raises the appropriate error
  .new
    raises the appropriate error with invalid CSV file
    raises the appropriate error with invalid email domain
    raises the appropriate error with missing CSV file

AccountReset::NotifyUserOfRequestCancellation
  #call
    sends an email to all of the user email addresses
    sends a text to all of the user phone numbers

OutboundHealthChecker
  #check
    connection fails to endpoint
      is not healthy after 2 retries
      notifies newrelic
      retries and is healthy if the second request succeeds
    timeout from endpoint
      notifies newrelic
      is not healthy after 2 retries
      retries and is healthy if the second request succeeds
    successful connection to endpoint
      400 response from endpoint
        is not healthy
        notifies newrelic
      500 response from endpoint
        notifies newrelic
        is not healthy
      200 response from endpoint
        is healthy
      300 response from endpoint
        is healthy
    bad config
      is not healthy

Proofing::LexisNexis::InstantVerify::CheckToAttributeMapper
  #map_failed_checks_to_attributes
    when the checks does not include any items
      returns an empty array
    when date of birth checks fail
      returns an array that includes the dob attribute
    when a check that is unknown fails
      returns an array that includes the unknown attribute
    when address checks fail
      returns an array that includes the ssn attribute
    when multiple checks for the same attribute fail
      returns an array that includes the attribute once
    when SSN checks fail
      returns an array that includes the ssn attribute
    when all of the checks pass
      returns an empty array
    when checks for multiple attributes fail
      returns an array that includes the failed attribute

Db::DeletedUser::Create
  creates a deleted_user and retains some fields
  fails gracefully if we try to insert the same user while in a transaction
  does nothing if the user does not exist
  fails gracefully if we try to insert the same user twice and returns the deleted user

DurationParser
  #valid?
    with a bad value
      is not valid
    with a real value
      is valid
    with an empty value
      is valid
  #parse
    with a format in months
      parses the value as a number of 30-day months
    with a format in days
      parses the value as a number of days
    with a format in weeks
      parses the value as a number of 7-day weeks
    with a bad format (aaa)
      is not valid
    with a format in years
      parses the value as a number of 365-day years
    with a bad format (123x)
      is not valid
    with a bad format (1 d)
      is not valid

Agreements::Db::AccountsByAgency
  .call
    returns all partner accounts grouped by agency

Proofing::LexisNexis::Response
  .new
    with an HTTP status error code
      raises an error that includes the status code and the body
  #verification_status
    passed
      is expected to eq "passed"
    failed
      is expected to eq "failed"
      with an invalid transaction status
        returns a hash of errors
      with a transaction error
        returns a hash of errors
  #verification_errors
    with a failed verification
      returns a hash of errors
    with a passed verification
      is expected to eq {}

Idv::GpoMail
  #mail_spammed?
    when the amount of sent mail is lower than the allowed maximum
      returns false
    when no mail has been sent
      returns false
    when too much mail has been sent
      returns true if the oldest event was within the last month
      returns false if the oldest event was more than a month ago
    when MAX_MAIL_EVENTS or MAIL_EVENTS_WINDOW_DAYS are zero
      returns false

Encryption::Encryptors::BackgroundProofingArgEncryptor
  #decrypt
    decrypts the ciphertext
  #encrypt
    returns a KMS wrapped AES encrypted ciphertext
    sets an encryption context

KeyRotator::AttributeEncryption
  #rotate
    re-encrypts email and phone
    does not change the `updated_at` timestamp

Agreements::IaaGtcSeeder
  .run
    creates new records if none exist
    updates a record if one exists

PushNotification::HttpPush
  #deliver
    makes an HTTP post to service providers with a push_notification_url
    with a non-200 response from a push notification url
      logs a warning
    when a user has revoked access to an SP
      does not notify that SP
    with a timeout when posting to one url
      still posts to the others
      logs a warning
    when risc_notifications_active_job_enabled is enabled
      delivers a notification via background job
    with an event that sends agency-specific iss_sub
      sends the agency-specific uuid
    when push_notifications_enabled is disabled
      does not deliver any notifications

UserEventCreator
  #create_out_of_band_user_event
    creates an event without a device and without an IP address
  #create_user_event
    when a device exists for the user
      updates the device and creates an event
    when a device exists that is not associated with the user
      alerts the user if they have other devices
      creates a device and creates an event
    when no device exists
      creates a device and creates an event
      alerts the user if they have other devices
      when there is no device cookie
        assigns one to the device
  #create_user_event_with_disavowal
    creates a device with a disavowal

PushNotification::PasswordResetEvent
  #event_type
    is the RISC event type
  #payload
    is a subject with the provided iss_sub

BarcodeOutputter
  #image_data
    returns image data

Proofing::Aamva::Request::VerificationRequest
  South Carolina id number padding
    id is less than 8 digits
      zero-pads the id to 8 digits
    id is greater than 8 digits
      passes the id through as is
  #headers
    should return valid SOAP headers
  #body
    should escape XML in applicant data
    should be a request body
    includes an address line 2 if one is present
  #send
    when the request is successful
      returns a response object
    when the request times out
      raises an error
    when the connection fails
      raises an error
  #url
    should be the AAMVA verification url from the params

Idv::InheritedProofing::Va::Mocks::Service
  #execute
    when auth_code is valid
      returns a Hash
    with auth code is invalid
      returns an error
  #initialize
    sets #auth_code

Db::SpReturnLog
  #create_return
    does not fail if row already exists

DocAuth::Acuant::Request
  #fetch
    when the request times out
      returns a response with a timeout message and exception and notifies NewRelic
    when the request resolves with retriable error then succeeds it only retries once
      calls NewRelic::Agent.notice_error each retry
    when the request resolves with a handled http error status
      it produces a 439 error
      it produces a 440 error
      it produces a 438 error
    when the request resolves with a 404 status it retries
      calls NewRelic::Agent.notice_error each retry
    when the request resolves with a 200
      calls handle_http_response on the subclass
    when the request resolves with a non 200 status
      returns a response with an exception
    when the request is a post instead of a get
      sends a post request with a request body

Proofing::Aamva::Response::SecurityTokenResponse
  #security_context_token_reference
    returns the security context token reference from the request
  #security_context_token_identifier
    returns the security token identifier from the request
  #nonce
    returns the nonce from the request
  #initialize
    when the security context token is missing
      should raise an error
    with a non-200 status code
      raises an AuthenticationError
    when the API response is an error
      raises an AuthenticationError

Idv::SendPhoneConfirmationOtp
  #call
    when the user has requested too many otps
      does not make a phone call or send an sms
    with voice
      makes a phone call
    with sms
      sends an sms
  #user_locked_out?
    the user is not locked out
      returns false
    the user is locked out
      returns true

IaaReportingHelper
  #iaas
    multiple IAAs on same GTC
      returns both fo the IAAS with the proper key
    IAAS on different GTCs
      returns both of the IAAS with the proper key of different GTCs

OtpPreferenceUpdater
  #call
    when user is nil
      does not update the user
    with authentication context
      when otp_delivery_preference is different from the user otp_delivery_preference
        updates the user
      when otp_delivery_preference is the same as the user otp_delivery_preference
        does not update the user

PivCacService
  #decode_token
    when configured for local development
      raises an error if no token provided
      returns the test data
    with piv/cac service disabled
      returns an error
    when communicating with piv/cac service
      when configured to contact remote service
        sends the token to the target service
        returns the decoded JSON from the target service
        with test data
          returns an error
      when configured to contact piv_cac service for local development
        sends the token to the target service
        returns the decoded JSON from the target service
        with test data
          returns an error
      with bad json
        returns an error
      when in non-development mode
        raises an error if no token provided
        when given a non-String token
          returns bad token error
        when configured with a user-facing endpoint
          is expected to eq "http://localhost:1234/?nonce=once&redirect_uri=http%3A%2F%2Fexample.com%2Fasdf"
        when in development mode
          directs the user to a local page
      with HTTP failure
        returns an error
  #randomize_uri
    when a static URL is configured
      returns the URL unchanged
    when a random URL is configured
      returns the URL with random bytes

DataRequests::FetchCloudwatchLogs
  fails if run in a deployed environment
  starts queries for each date and returns processed results

UspsInPersonProofing::Proofer
  #request_enroll
    returns enrollment information
    returns 500 error
    returns 400 error
  #request_pilot_facilities
    returns facilities
  #request_enrollment_code
    returns enrollment information
  #request_proofing_results
    returns passed enrollment information
    returns in-progress enrollment information
    returns failed enrollment information
  #request_facilities
    returns facilities
  #retrieve_token!
    sets token and token_expires_at
    calls the endpoint with the expected params

TimeService
  .round_time
    returns a Time instance rounded to the nearest interval

CloudFrontHeaderParser
  with an IPv6 address
    #client_port
      returns the client port number
  with an IPv4 address
    #client_port
      returns the client port number
  with no CloudFront header sent
    #client_port
      returns nil

AgencyIdentityLinker
  #for
    when there is already an agency identity
      returns the existing agency identity
    when there is not an agency identity
      but there is a service provider identity
        returns the service provider identity
        persists the service provider identity as an agency identity
      and there is no service provider identity
        returns nil
  #link_identity
    returns the existing agency_identity if it exists
    links identity with 1 sp
    links identities from 2 sps
    does not link identity without an agency_id
    does not allow agency_identity uuid to be reused after user deletes account
    does not allow 2 sp uuids to be reused after user deletes account
  #sp_identity_from_uuid_and_sp
    returns nil if sp_identity does not exist
    returns sp_identity if it exists

Encryption::ContextlessKmsClient
  with kms plaintext less than 4k
    #encrypt
      with KMS enabled
        uses KMS to encrypt the plaintext
      without KMS enabled
        uses the password pepper to encrypt the plaintext and signs it
    #looks_like_kms?
      returns true for kms encrypted data
      returns false for non kms encrypted data
    #decrypt
      with KMS enabled
        uses the password pepper to decrypt a legacy ciphertext encrypted without KMS
        uses KMS to decrypt a ciphertext encrypted with KMS
      without KMS enabled
        uses the password pepper to decrypt a ciphertext
  with kms plaintext greater than 4k
    #encrypt
      logs the encryption
      without KMS enabled
        uses the password pepper to encrypt the plaintext and signs it
      with KMS enabled
        uses KMS to encrypt the plaintext
    #looks_like_kms?
      returns true for kms encrypted data
      returns false for non kms encrypted data
    #decrypt
      logs the decryption
      with KMS enabled
        uses the password pepper to decrypt a legacy ciphertext encrypted without KMS
        uses KMS to decrypt a ciphertext encrypted with KMS
      without KMS enabled
        uses the password pepper to decrypt a ciphertext

Proofing::LexisNexis::DateFormatter
  #formatted_date
    is a hash
  #date
    with a YYYYMMDD formatted date
      is expected to eq Sat, 02 Jan 1993
    with a YYYY-MM-DD formatted date
      is expected to eq Sat, 02 Jan 1993

Proofing::LexisNexis::Ddp::ResponseRedacter
  self.redact
    nil hash argument
      produces an error about an empty body
    mismatched data type argument
      produces an error about malformed body
    hash with mixed known and unknown keys
      redacts values of unknown keys and allows known keys
    empty hash agrument
      passes the empty hash onward

Agreements::Reports::AgencyPartnerAccountsReport
  uploads the JSON serialization of the passed partner accounts
  #report_path
    nests the report under the downcased agency abbreviation

PushNotification::MfaLimitAccountLockedEvent
  #payload
    is a subject with the provided iss_sub
  #event_type
    is the RISC event type

PhoneNumberCapabilities
  has valid configuration
  .load_config
    loads the config
    when there are country_phone_number_overrides
      overrides the YAML but does not erase values
  #unsupported_location
    returns the name of the unsupported country (Bahamas)
    returns the name of the unsupported country (Bermuda)
    phonelib returns default country
      returns the default country
  #supports_voice?
    US number
      is expected to eq true
    Philippines number that is unconfirmed
      is expected to eq false
    Bermuda number
      is expected to eq false
    Philippines number that is confirmed
      is expected to eq true
  #supports?
    unknown method
      should raise an error
    voice
      voice is supported
        is expected to eq true
      voice is unsupported
        is expected to eq false
    sms
      sms is unsupported
        is expected to eq false
      sms is supported
        is expected to eq true
  #supports_all?
    voice is supported, sms is unsupported
      is expected to eq false
    sms is supported, voice is unsupported
      is expected to eq true
    both sms and voice are supported
      is expected to eq true
  #supports_sms?
    US number
      is expected to eq true
    Iraq number that is unconfirmed
      is expected to eq false
    Bermuda number
      is expected to eq true
  #sms_only?
    Bahamas number
      is expected to eq true
    phonelib returns nil or a 2-letter country code that doesn't match our YAML
      is expected to eq false
    voice is supported
      is expected to eq false
    Bermuda number
      is expected to eq true
    Morocco number
      is expected to eq true

DeletedAccountsReport
  #call
    prints the report with zero records when no users or identities
    prints the report with zero records when no users are deleted
    prints the report with zero records when it is not the correct sp
    prints the report with one record
    prints the report with zero records when the last auth date is beyond days ago

Proofing::Aamva::Response::AuthenticationTokenResponse
  #auth_token
    returns the token from the response body
  #initialize
    when the API response has an error
      raises an AuthenticationError
    with a non-200 status code
      raises an AuthenticationError
    when the API response is missing a token
      raises an AuthenticationError

EventDisavowal::ValidateDisavowedEvent
  #call
    it has been more than 10 days since the event occured
      returns an unsuccessful response
    the event is already disavowed
      returns an unsuccessful response
    the event is valid
      returns a successful response
    the event is nil
      returns an unsuccessful response

AgencySeeder
  #run
    inserts agencies into the database from agencies.yml
    updates existing agencies based on the current value of the yml file
    inserts agencies in the proper order from agencies.yml

DocAuth::Acuant::Responses::GetResultsResponse
  with a failed result
    returns an unsuccessful response with errors
    when there are alerts with success result codes
      does not return errors for alerts with success result codes
    when multiple alerts have the same friendly error
      only returns one copy of the each error
    when with an acuant error message
      returns the untranslated error
    when visiual_pattern passes and fails
      returns log_alert_results for visible_pattern with multiple results comma separated
    when front image HDPI is too low
      returns an unsuccessful response with front DPI error
  with an attention result
    when there are other unsuccessful alerts
      is not a successful result
    when the only unsuccessful alert is attention barcode could not be read
      is a successful result
  when there are errors and still parsed PII fields
    is not sucessful, has errors, and still has pii_from_doc
  #attention_with_barcode?
    is expected to eq false
    with single barcode attention error
      is expected to eq true
    with multiple errors including barcode attention
      is expected to eq false
  with a successful result
    parsed PII from the doc
    returns a successful response with no errors

Proofing::Aamva::Request::SecurityTokenRequest
  #url
    should be the AAMVA authentication url
  #headers
    should return valid SOAP headers
  #send
    when the request is successful
      returns a response object
    when the connection fails
      raises an error
    when the request times out once
      retries and tries again
    when the request times out a second time
      raises an error
  #body
    should be a signed request body

Idv::InPersonConfig
  .enabled_for_issuer?
    is expected to eq false
    with in person proofing enabled
      is expected to eq true
      with idv sp required
        is expected to eq false
      with issuer argument
        issuer does not exist
          is expected to eq false
        issuer has in-person proofing enabled
          is expected to eq true
        issuer has in-person proofing disabled
          is expected to eq false
  .enabled_without_issuer?
    is expected to eq true
    with idv sp required
      is expected to eq false
  .enabled?
    is expected to eq false
    with in person proofing enabled
      is expected to eq true

Agreements::UsageSummarizer
  .call
    returns the appropriate usage summary

AccountReset::GrantRequest
  #call
    adds a notified at timestamp and granted token to the user

PivCac::CheckConfig
  non-production environments
    does not raise an error
  production environments
    non-https config
      does raise an error
    https config
      does not raise an error

UserAlerts::AlertUserAboutNewDevice
  #call
    sends an email to all confirmed email addresses

Idv::InPerson::CompletionSurveySender
  .send_completion_survey
    does nothing if the user should not receive a survey
    user should receive a survey
      sends a survey to the user's confirmed email addresses
      marks the user as having received a survey

Encryption::AesCipher
  .encryption_cipher
    returns an AES cipher for encryption operation
  #decrypt
    returns plaintext
    raises error on invalid input
  #encrypt
    returns JSON string containing AES-encrypted ciphertext

DocAuth::Response
  #merge
    does not mutate the original instance
    returns merged instance
    attention_with_barcode?
      is expected to eq false
      with other attention with barcode
        is expected to eq true
      with own attention with barcode
        is expected to eq true
    pii_from_doc
      merges pii from doc
    success
      one failure
        results in false
      both success
        results in true
      both failure
        results in false
    exception
      no exception
        results in no exception
      other exception
        results in exception
      own exception
        results in exception
    errors
      merges errors
  #to_h
    pii from doc present
      does not include pii from doc
  #attention_with_barcode?
    returns false

Agreements::Reports::AgenciesReport
  uploads the JSON serialization of the passed agencies
  #report_path
    saves to the root directory

Agreements::PartnerAccountSeeder
  .run
    updates a record if one exists
    creates new records if none exist
    with bad association
      raises the appropriate error

IrsAttemptsApi::AttemptEvent
  .from_jwe
    returns an event decrypted from the JWE
  #to_jwe
    returns a JWE for the event

DocumentCaptureSessionResult
  EncryptedRedisStructStorage
    works with EncryptedRedisStructStorage

Idv::Steps::VerifyStep
  #call
    sets uuid_prefix on pii_from_doc
    passes the X-Amzn-Trace-Id to the proofer
    when different users use the same SSN within the same timeframe
      throttles them all
    when pii_from_doc is not present
      marks step as incomplete

CompletionsDecider
  #go_back_to_mobile_app?
    user agent is desktop and redirect_uri does not exist
      returns false
    user agent is mobile and redirect_uri does not exist
      returns false
    user agent is desktop and redirect_uri does not start with http
      returns true
    user agent is mobile and redirect_uri starts with http
      returns false
    user agent is desktop and redirect_uri starts with http
      returns false
    user agent is mobile and redirect_uri does not start with http
      returns false
    request url is nil
      returns false

AccountResetHealthChecker
  .check
    when an old request was cancelled
      returns an unhealthy check
    when a request is not serviced on time
      returns an unhealthy check
    when all requests are serviced on time
      returns a healthy check
    when there are no requests
      returns a healthy check

DocAuth::LexisNexis::Request
  #settings
    includes the locale
  #fetch
    POST request
      with a successful http request
        raises a NotImplementedError when attempting to handle the response
      with an unsuccessful http request
        includes information on the error
        returns a generic DocAuth::Response object
    GET request
      with an unsuccessful http request
        includes information on the error
        returns a generic DocAuth::Response object
      with a successful http request
        raises a NotImplementedError when attempting to handle the response
  unimplemented methods
    #workflow
      raises NotImplementedError
    #handle_http_response
      raises NotImplementedError
    #body
      raises NotImplementedError
    #password
      raises NotImplementedError
    #username
      raises NotImplementedError

DocAuth::Acuant::PiiFromDoc
  #convert_date
    is nil for a bad format
    parses and formats negative numbers
    parses and formats a date from the Acuant format
  #call
    correctly parses the pii data from acuant and returns a hash

SamlRequestValidator
  #call
    invalid authn context and invalid sp and authorized nameID format
      returns FormResponse with success: false
    valid authn context and invalid sp and authorized nameID format
      returns FormResponse with success: false
    valid authn context and authorized email nameid format for SP
      returns FormResponse with success: true
      returns FormResponse with success: true for ial2 on ial:2 sp
    valid authn context and unauthorized nameid format
      returns FormResponse with success: false
    valid authn context and sp and authorized nameID format
      returns FormResponse with success: true
    invalid authn context and valid sp and authorized nameID format
      returns FormResponse with success: false for unknown authn context
      returns FormResponse with success: false for ial2 on an ial:1 sp
    valid authn context and sp and unauthorized nameID format
      returns FormResponse with success: false with unauthorized nameid format
    unsupported authn context with step up and valid sp and nameID format
      returns a FormResponse with success: true for Comparison=better
      returns a FormResponse with success: true for Comparison=minimum
    unsupported authn context without step up and valid sp and nameID format
      returns FormResponse with success: false for unknown authn context

Proofing::Mock::DeviceProfilingBackend
  #record_profiling_result
    sets the value in redis
    raises with unknown result

IrsAttemptsApi::Tracker
  #track_event
    records the event in redis
    omit failure reason when failure_reason is blank
    does not store events in plaintext in redis
    should not omit failure reason when success is false and failure_reason is not blank
    omit failure reason when success is true
    the IRS attempts API is not enabled
      still logs metadata about the event
      does not record any events in redis
    metadata logging is disabled
      does not log metadata about the event
    the current session is not an IRS attempt API session
      does not record any events in redis
      still logs metadata about the event
    without a service provider
      still logs metadata about the event
  #parse_failure_reason
    parses failure_reason from errors when no error_details present
    parses failure_reason from error_details

Idv::CancelVerificationAttempt
  when there are pending profiles for other users
    only updates profiles for the specificed user
  the user has multiple pending profiles
    deactivates both profiles
  the user has a pending profile and an active profile
    deactivates the pending profile
  the user has a pending profile
    deactivates the profile

CalendarService
  class methods
    .weekend?
      returns true for weekends
      returns false for weekdays
    .observed_holiday?
      when its not a holiday
        is expected to eq false
      when its a holiday
        is expected to eq true
    .holiday?
      when its a holiday
        is expected to eq true
      when its not a holiday
        is expected to eq false
    .weekend_or_holiday?
      returns true for holidays on a weekday
      returns false for weekdays
      returns true for weekends
  instance methods
    #observed
      when date is a Saturday
        returns the day before
      when date is a Sunday
        returns the day after
      when date is a weekday
        returns the day
    #observed_holiday?
      when its a holiday
        is expected to eq true
      when its not a holiday
        is expected to eq false
    #holidays
      is expected to eq [Mon, 01 Jan 2018, Mon, 15 Jan 2018, Mon, 19 Feb 2018, Mon, 28 May 2018, Tue, 19 Jun 2018, Wed, 04 Jul 2018, Mon, 03 Sep 2018, Mon, 08 Oct 2018, Sun, 11 Nov 2018, Thu, 22 Nov 2018, Tue, 25 Dec 2018]
    #observed_holidays
      is expected to eq [Mon, 01 Jan 2018, Mon, 15 Jan 2018, Mon, 19 Feb 2018, Mon, 28 May 2018, Tue, 19 Jun 2018, Wed, 04 Jul 2018, Mon, 03 Sep 2018, Mon, 08 Oct 2018, Mon, 12 Nov 2018, Thu, 22 Nov 2018, Tue, 25 Dec 2018]
      when the next NY is on a Saturday
        includes Dec 31st
    #holiday?
      when its not a holiday
        is expected to eq false
      when its a holiday
        is expected to eq true

Proofing::Aamva::Proofer
  #proof
    when verification attributes are missing
      the result should be failed
    when verification is unsuccessful
      the result should be failed
    when verification is successful
      the result is successful

EncryptedDocumentStorage::DocumentWriter
  #storage
    outside production
      it uses the disk
    in production
      is uses S3
  #encrypt_and_write_document
    encrypts the document and writes it to storage

IrsAttemptsApi::EnvelopeEncryptor
  .formatted_timestamp
    formats according to the specification
  .encrypt
    returns encrypted result
    filename includes digest and truncated timestamp
  .decrypt
    returns decrypted text

BrowserCache
  .parse
    caches by user agent
    does not error on long user agents containing multi-byte characters
    parses a user agent using Browser gem

Idv::InheritedProofing::Va::Service
WARNING: Private key file '/home/jmax/repos/identity-idp/tmp/empty.key' not found!
  is expected to eq #<OpenSSL::PKey::RSA:0x000055e2c5f7eee8 oid=rsaEncryption>
WARNING: Private key file '/home/jmax/repos/identity-idp/tmp/empty.key' not found!
  example at ./spec/services/idv/inherited_proofing/va/service_spec.rb:19
  #execute
    when the auth code is invalid
      when an empty? string
        behaves like an invalid auth code error is raised
WARNING: Private key file '/home/jmax/repos/identity-idp/tmp/empty.key' not found!
          raises an error
      when an nil?
        behaves like an invalid auth code error is raised
WARNING: Private key file '/home/jmax/repos/identity-idp/tmp/empty.key' not found!
          raises an error
    when the auth code is valid
WARNING: Private key file '/home/jmax/repos/identity-idp/tmp/empty.key' not found!
      decrypts the response
WARNING: Private key file '/home/jmax/repos/identity-idp/tmp/empty.key' not found!
      makes an authenticated request

DataRequests::WriteCloudwatchLogs
  #call
    writes the logs to output_dir/logs.csv
    missing data
      does not blow up
    various multi factor ids
      unpacks all multi factor ids

DataRequests::CreateMfaConfigurationsReport
  #call
    includes an array for phone numbers
    includes an array for security keys
    includes an array for piv/cac cards
    includes an array with backup codes
    includes an array for authentication apps

ProofingSessionAsyncResult
  EncryptedRedisStructStorage
    works with EncryptedRedisStructStorage

Funnel::Registration::TotalRegisteredCount
  returns 0 until the user is fully registered
  returns 1 when a user is fully registered
  returns 0
  returns 2

FrontendLogger
  #track_event
    with unknown event
      logs with prefix for unknown event (FAILED - 1)
    with method handler
      calls method with attributes based on signature (FAILED - 2)

IalContext
  #default_to_ial2?
    when the service provider is ial1 and ial is not requested
      is expected to eq false
    when the service provider is ial2 and ial2 is requested
      is expected to eq false
    when the service provider is ial2 and ial1 is requested
      is expected to eq false
    when the service provider is ial2 and ial is not requested
      is expected to eq true
    when the service provider is ial1 and ial1 is requested
      is expected to eq false
  #ial2_service_provider?
    when the service provider is ial3
      is expected to eq true
    when the service provider is ial2
      is expected to eq true
    when the service provider is ial1
      is expected to eq false
  #bill_for_ial_1_or_2
    when ial max and the user has proofed for ial2
      is expected to eq 2
    when ial max and the user is nil
      is expected to eq 1
    when ial is nil
      is expected to eq 1
    when ial1
      is expected to eq 1
    when ial2
      is expected to eq 2
    when ial max and the user has not proofed
      is expected to eq 1
  #ial2_or_greater?
    when ialmax is requested
      is expected to eq false
    when the service provider is ial1 and ial1 is requested
      is expected to eq false
    when the service provider is ial1 and ial is not requested
      is expected to eq false
    when ial 2 is requested
      is expected to eq true
    when the service provider is ial2 and ial is not requested
      is expected to eq true
    when the service provider is ial2 and ial2 is requested
      is expected to eq true
    when ial 1 is requested
      is expected to eq false
    when the service provider is ial2 and ial1 is requested
      is expected to eq false
  #ial
    with a bad string input
      is expected to raise KeyError
    with an integer input
      is expected to eq 2
    with a nil input
      is expected to eq nil
    with a string input of an authn context
      is expected to eq 1
  #ialmax_requested?
    when ialmax is requested
      is expected to eq true
    when ial 1 is requested with Comparison=minimum and ial 1 SP
      is expected to eq false
    when ial 2 is requested
      is expected to eq false
    when ial 1 is requested with Comparison=minimum and ial 2 SP
      is expected to eq true
    when ial 1 is requested without Comparison=minimum and ial 2 SP
      is expected to eq false
  #ial2_requested?
    when ial 2 is requested
      is expected to eq true
    when ialmax is requested without a user
      is expected to eq false
    when ialmax is requested with a user with no profile
      is expected to eq false
    when the SP is nil
      is expected to eq true
    when ialmax is requested with a user with a verified profile
      is expected to eq true
    when ial 1 is requested
      is expected to eq false
  #user_ial2_verified?
    when the user has proofed for ial2
      is expected to eq true
    when the user is nil
      is expected to eq false
    when the user has not proofed
      is expected to eq false

OtpRateLimiter
  #lock_out_user
    sets the second_factor_locked_at
  #exceeded_otp_send_limit?
    tracks verified phones separately. limiting one does not limit the other
    is true after maxretry_times attemps +1 in findtime minutes
    is false by default
  #increment
    updates otp_last_sent_at
    increments the otp_send_count

DocAuth::ErrorGenerator
  The correct errors are delivered when
    DocAuthResult is Failed with an unknown passed alert
    DocAuthResult is Failed with single alert with a side
    DocAuthResult is Failed with an unknown alert
    DocAuthResult is Failed with multiple back alerts
    DocAuthResult is Failed
    DocAuthResult is Failed with multiple front alerts
    DocAuthResult is Failed with multiple alerts including an unknown
    DocAuthResult is Attention
    DocAuthResult is Failed with multiple id alerts
    DocAuthResult is Failed with multiple different alerts
  The correct errors are delivered for image metrics when
    back image HDPI is too low
    front image VDPI is too low
    both images have different problems
    front image sharpness is too low
    back image sharpness is too low
    front image glare is too low
    both images glare is too low
    back image glare is too low
    both images glare is too low
    both images sharpness is too low
    front and back image DPI is too low
    both images sharpness is too low
    front image HDPI is too low

Idv::Steps::InPerson::VerifyStep
  #call
    updates proofing component vendor
    only enqueues a job once
    sets uuid_prefix on pii_from_user
    passes the X-Amzn-Trace-Id to the proofer
    when different users use the same SSN within the same timeframe
      throttles them all
    when pii_from_user is blank
      marks step as incomplete

AccountReset::DeleteAccount
  #call
    can be called even if DeletedUser exists
    when user.confirmed_at is nil
      does not blow up

Agreements::IaaUsage
  defaults
    returns an empty set for ial2_users
    returns an empty hash defaulting to zero for authentications
  #count
    correctly skipes return logs for other SPs
    correctly skips return logs outside the PoP
    correctly counts IAL2 authentications within the PoP
    correctly counts IAL1 authentications within the PoP
    returns a copy of itself with the updated usage metrics

MarketingSite
  .rules_of_use_url
    points to the rules of use page
    when the user has set their locale to :es
      points to the rules of use page with the locale appended
  .valid_help_center_article?
    with invalid article
      is expected to eq false
    with valid article
      is expected to eq true
  .messaging_practices_url
    points to messaging practices section of the privacy page
    when the user has set their locale to :es
      points to the privacy page section with the locale appended
  .security_and_privacy_how_it_works_url
    points to the privacy page
    when the user has set their locale to :es
      points to the privacy page with the locale appended
  .contact_url
    points to the contact page
    when the user has set their locale to :es
      points to the contact page with the locale appended
  .help_center_article_url
    with invalid article
      raises ArgumentError
    with valid article
      returns article URL
  .help_authentication_app_url
    points to the authentication app section of the help page
    when the user has set their locale to :es
      points to the authentication app section of the help page with the locale appended
  .help_url
    points to the help page
    when the user has set their locale to :es
      points to the help page with the locale appended
  .base_url
    points to the base URL
    when the user has set their locale to :es
      points to the base URL with the locale appended
  .security_and_privacy_practices_url
    points to the privacy page
    when the user has set their locale to :es
      points to the privacy page with the locale appended

RememberDeviceCookie
  #to_json
    should render a JSON string
  #valid_for?(user:, expiration_interval:)
    when the user revoked remember device after creating the token
      is expected to eq false
    when the token is expired
      is expected to eq false
    when the user revoked remember device before creating the token
      is expected to eq true
    when the token is valid
      is expected to eq true
    when the token does not refer to the current user
      returns false
  .from_json(json)
    should raise an error if the role in the JSON string is missing
    should parse a JSON string
    should raise an error if the role in the JSON string is not "remember_me"

MaintenanceWindow
  #finish
    is formatted in the display_time_zone
    with an empty value
      is expected to eq nil
  #active?
    when now is outside the maintenance window
      is expected to eq false
    when now is during the maintenance window
      is expected to eq true
    when both start and finish are empty
      is falsey
  #start
    is formatted in the display_time_zone
    with an empty value
      is expected to eq nil

DocAuth::Mock::DocAuthMockClient
  allows doc auth without any external requests
  if the document is a YAML file it returns the PII from the YAML file
  allows responses to be mocked
  ignores image_sources argument
  implements the same public methods as the real Acuant client
  when checking results gives a failure
    returns a failure response if the results failed

PushNotification::ReproofCompletedEvent
  #payload
    is a subject with the provided iss_sub
  #event_type
    is the RISC event type

PushNotification::RecoveryActivatedEvent
  #event_type
    is the RISC event type
  #payload
    is a subject with the provided iss_sub

AccountReset::Cancel
  validates presence of token
  validates validity of token
  when the token is not valid
    does not update the account_reset_request
    does not notify the user via email of the account reset cancellation
    when the user does not have a phone enabled for SMS
      does not notify the user via SMS
    when the user has a phone enabled for SMS
      does not notify the user via SMS of the account reset cancellation
  when the token is valid
    updates the account_reset_request
    notifies the user via email of the account reset cancellation
    when the user does not have a phone enabled for SMS
      does not notify the user via SMS
    when the user has a phone enabled for SMS
      notifies the user via SMS of the account reset cancellation
      returns a FormResponse with message_id

Idv::DocAuthFormResponse
  #merge
    results in an instance of Idv::DocAuthFormResponse
    uses pii from other if available
    falls back to pii from self if not available in other
  #attention_with_barcode?
    is expected to eq false
    with attention with barcode response extra
      is expected to eq true
  #pii_from_doc
    defaults to empty hash
    is writable

X509::Attribute
  delegation
    delegates to raw

Agreements::IntegrationSeeder
  .run
    updates a record if one exists
    creates new records if none exist

Db::MonthlySpAuthCount::UniqueMonthlyAuthCountsByIaa
  .call
    is empty with no data
    with data
      adds up auth_counts and sp_return_log instances
    with only partial month data
      adds up auth_counts and sp_return_log instances

Analytics
  tracks session duration
  #track_event
    does not track unique events and paths when an event fails
    throws an error when pii is passed in
    does not alert when pii_like_keypaths is passed
    throws an error when it detects sample PII in the payload
    includes the locale of the current request
    does not alert when pii values are inside words
    identifies the user and sends the event to the backend
    tracks the user passed in to the track_event method
    tracing headers
      includes the tracing header as trace_id

EmailConfirmationTokenValidator
  #email_address_already_confirmed_by_user?
    the email address was confirmed by a different user
      is expected to eq false
    the email address was confirmed by the user
      is expected to eq true
  #submit
    the email address exists and the token is not expired
      returns a successful result
    the email of the user does not match the user confirming
      returns an unsucessful result
    the email address exists and the token is expired
      returns an unsuccessful result
    the email address exists and is already confirmed
      returns an unsuccessful result
    the email address does not exist
      returns an unsuccessful result

OutOfBandSessionAccessor
  #ttl
    returns the remaining time-to-live of the session data in redis
  #load_pii
    loads PII from the session
  #destroy
    destroys the session
  #load_x509
    loads X509 attributes from the session

Proofing::Aamva::Response::VerificationResponse
  #verification_results
    when all attributes are verified
      returns a hash of values that were verified
    when not all attributes are verified
      returns a hash of values that were verified and values that were not
  #reasons
    when required attributes are not verified
      returns an array with the reasons verification failed
      with a namespaced XML response
        returns an array with the reasons verification failed
    when required attributes are verified
      returns an empty array
    when all attributes are verified
      returns an empty array
      with a namespaced XML body
        returns an empty array
  #transaction_locator_id
    is the TransactionLocatorID from the response
    with a namespaced XML response
      is the value from the response
    with a namespaced XML failure response
      is the value from the response
    when there is no TransactionLocatorID
      is nil
  #success?
    when all attributes are verified
      is expected to eq true
    when required attributes are not verified
      is expected to eq false
    when required attributes are missing
      is expected to eq false
    when required attributes are verified
      is expected to eq true
      with a namespaced XML response
        is expected to eq true
  #initialize
    with a non-200 status code
      raises a VerificationError
    when the API response has an error
      raises a VerificationError

RequestPasswordReset
  #perform
    when the user is found and confirmed, but the email address is not
      does not send a recovery activated push event
      sends the account registration email
    when the user is found, not privileged, and not yet confirmed
      sends password reset instructions
    when the user is found and confirmed
      calls irs tracking method forgot_password_email_sent
      sends a recovery activated push event
      sends password reset instructions
    when the user requests password resets above the allowable threshold
      only sends a push notification when the attempts have not been throttled
      throttles the email sending and logs a throttle event
    when the user is not found
      sends the account registration email
    when two users have the same email address
      always finds the user with the confirmed email address

AccessTokenVerifier
  #submit
    without an authorization header
      is not successful
    with a valid bearer token
      is successful
    with an invalid bearer token
      is not successful
    with a malformed authorization header
      is not successful
  #identity
    with a valid access_token
      returns the identity record
    with an expired access_token
      errors
    with a bad access token
      errors

DataRequests::LookupSharedDeviceUsers
  #call
    recursively looks up users sharing devices

SpReturnUrlResolver
  #failure_to_proof_url
    returns the returns to sp url if the failure to proof url is an empty string
    returns the return to sp url if no failure to proof url is registered
    return the failure to proof url if one is registered
  #homepage_url
    returns nil
    with return to sp url
      return return to sp url
  #return_sp_url
    for an SP with a redirect URI in the request URL
      returns the redirect URI with error params and state
      does not return the redirect URI if it is not in the SP redirect uri list
    for an SP without a redirect URI in the request URL
      returns the return URL specified in the config
    for an SP without a redirect URI or return URL in the config
      returns the ACS URL without a path for a SAML SP
      returns the first redirect URI without a path for an OIDC SP

SsnFormatter
  .format
    string with dashes
      is expected to eq "123-45-6789"
    numeric string
      is expected to eq "123-45-6789"
    numeric
      is expected to eq "123-45-6789"
  .format_masked
    string with dashes
      is expected to eq "1**-**-***9"
    numeric
      is expected to eq "1**-**-***9"
    numeric string
      is expected to eq "1**-**-***9"
  .normalize
    numeric
      is expected to eq "123456789"
    string with dashes
      is expected to eq "123456789"
    numeric string
      is expected to eq "123456789"

IdTokenBuilder
  #id_token
    sets the nonce as the nonce
    sets the acr to the request acr
    sets the audience to the service provider
    sets the issuer to the root url
    sets the issued-at to now
    sets the jti to something meaningful
    sets the kid for the signing key in the JWT headers
    sets the access token hash correctly
    sets the code hash correctly
    sets the subject as the uuid
    sets the not-before to now
    sets the algorithm header
    without a custom_expiration
      sets the expiration to the ttl of the session key in redis
    including attributes allowed by the scope from the request
      with the email scope
        sets the email
      without the email scope
        does not include the email

Encryption::UserAccessKey
  .new
    allows creation of a uak using password and salt
    allows creation of a uak using an scrypt hash
    with a legacy password with a 20 byte salt
      can successfully create a uak using the password and the salt
  #unlocked?
    with an initialized key
      returns false
    with an unlocked key
      returns true
    with a built key
      returns true
  #build
    assigns random_r and calculates the cek, encryption_key, and encrypted_password
  #unlock
    derives random_r from the encryption key and sets the cek and encrypted password

Encryption::PasswordVerifier
  Encryption::PasswordVerifier::PasswordDigest
    .parse_from_string
      does not blow up with unknown/new keys
  #digest
    creates a digest from the password
  #stale_digest?
    returns true if the digest is stale
    returns false if the digest is fresh
  #verify
    returns false if the password does not match
    returns true if the password does match
    allows verification of legacy UAK passwords
    returns false for nonsense

GpoConfirmationMaker
  #otp
    filters out profane words
    should return a normalized, 10 digit code
  with a nil zipcode
    #perform
      accepts the zipcode
  #perform
    should create a GpoConfirmation with the encrypted attributes
    should create a GpoConfirmationCode with the profile and the encrypted OTP
  with a (bogus) zip+1 zipcode
    #perform
      strips the +0 from the zipcode

Pii::Cacher
  #save
    updates fingerprints when keys are rotated
    allows specific profile to be decrypted
    does not raise an error if pii_fingerprint is nil but attributes are present
    writes decrypted PII to user_session
    does not attempt to rotate nil attributes
  #fetch
    fetches decrypted PII from user_session
    allows specific profile to be decrypted

PwnedPasswords::LookupPassword
  #call
    returns false for non pwned passwords
    returns true for pwned passwords

ServiceProviderRequestProxy
  .from_uuid
    bad input
      handles hashes
      handles a null byte in the uuid
      handles nil
      handles empty string
      handles arrays
    when the record exists
      both loa1 and ial1 values return the same thing
      returns the record matching the uuid
      both loa3 and ial2 values return the same thing
    when the record does not exist
      returns an instance of NullServiceProviderRequest

Proofing::LexisNexis::PhoneFinder::Proofer
  behaves like a lexisnexis proofer
    #proof_applicant
      when proofing fails
        results in an unsuccessful result
      when proofing succeeds
        results in a successful result
  #proof
    when the request times out
      retuns a timeout result
    when the rdp2 response is a failure
      is a failure result
    when the response is a success
      is a successful rdp2 result
      is a successful rdp1 result
    when the rdp1 response is a failure
      is a failure result
    when an error is raised
      returns a result with an exception

Proofing::Aamva::VerificationClient
  #send_verification_request
    should get the auth token from the auth client
    when verification is not successful
      should return an unsuccessful response with errors
    when verification is successful
      should return a successful response

IrsAttemptsApi::RedisClient
  #read_events
    stores events in hourly buckets
    reads the event events from redis
  #write_event
    writes the attempt data to redis with the event key as the key

Idv::InPerson::EnrollmentCodeFormatter
  .format
    returns a formatted code

Encryption::MultiRegionKmsClient
  #decrypt
    decrypts in default region where multiple regions present
    errors if none of the encryption regions are present
    decrypts successfully if only one of the encryption regions is valid
    decrypts successfully if the default region is not present
    with a legacy ciphertext
      decrypts the ciphertext with KMS
    with a multi region ciphertext
      decrypts the ciphertext with KMS
  #encrypt
    with multi region disabled
      encrypts with KMS
    with multi region enabled
      encrypts with KMS

ProfanityDetector
  .without_profanity
    keeps executing a block until it does not return something profane
    has a limit to guard against bad random generators
  .profane?
    detects profanity split by dashes
    detects profanity inside words
    detects profanity across upper/lower case
    is false for benign words
    detects profanity

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) Proofing::LexisNexis::InstantVerify::Proofer#proof proofing failures that allow additional verification the result fails for a reason other than a failure to match attributes returns a result that cannot pass with additional verification
     # Not yet implemented
     # ./spec/services/proofing/lexis_nexis/instant_verify/proofing_spec.rb:112

Failures:

  1) FrontendLogger#track_event with unknown event logs with prefix for unknown event
     Failure/Error:
       def initialize(user:)
         @user = user
       end

     ArgumentError:
       missing keyword: :user
     # ./spec/services/idv/analytics_events_enhancer_spec.rb:14:in `initialize'
     # ./spec/services/frontend_logger_spec.rb:14:in `new'
     # ./spec/services/frontend_logger_spec.rb:14:in `block (2 levels) in <main>'
     # ./spec/services/frontend_logger_spec.rb:20:in `block (2 levels) in <main>'
     # ./spec/services/frontend_logger_spec.rb:26:in `block (3 levels) in <main>'
     # ./spec/services/frontend_logger_spec.rb:32:in `block (4 levels) in <main>'

  2) FrontendLogger#track_event with method handler calls method with attributes based on signature
     Failure/Error:
       def initialize(user:)
         @user = user
       end

     ArgumentError:
       missing keyword: :user
     # ./spec/services/idv/analytics_events_enhancer_spec.rb:14:in `initialize'
     # ./spec/services/frontend_logger_spec.rb:14:in `new'
     # ./spec/services/frontend_logger_spec.rb:14:in `block (2 levels) in <main>'
     # ./spec/services/frontend_logger_spec.rb:20:in `block (2 levels) in <main>'
     # ./spec/services/frontend_logger_spec.rb:26:in `block (3 levels) in <main>'
     # ./spec/services/frontend_logger_spec.rb:42:in `block (4 levels) in <main>'

Top 10 slowest examples (12.52 seconds, 8.6% of total time):
  RequestPasswordReset#perform when the user requests password resets above the allowable threshold only sends a push notification when the attempts have not been throttled
    2.1 seconds ./spec/services/request_password_reset_spec.rb:200
  UserAlerts::AlertUserAboutAccountVerified#call sends an email to all confirmed email addresses
    1.59 seconds ./spec/services/user_alerts/alert_user_about_account_verified_spec.rb:10
  AccountReset::GrantRequestsAndSendEmails#perform after waiting the full wait period sends 2 notifications after 2 requests are granted
    1.3 seconds ./spec/services/account_reset/grant_requests_and_send_emails_spec.rb:43
  UserAlerts::AlertUserAboutPersonalKeySignIn#call sends sms and emails to confirmed addresses
    1.28 seconds ./spec/services/user_alerts/alert_user_about_personal_key_sign_in_spec.rb:5
  RequestPasswordReset#perform when the user requests password resets above the allowable threshold throttles the email sending and logs a throttle event
    1.25 seconds ./spec/services/request_password_reset_spec.rb:167
  ResetUserPassword#call changes the password
    1.09 seconds ./spec/services/reset_user_password_spec.rb:13
  ServiceProviderSeeder#run updates the plural certs column with the PEM content of certs
    1.02 seconds ./spec/services/service_provider_seeder_spec.rb:21
  AccountReset::CancelRequestForUser#call does not cancel account reset requests for a different user
    0.98422 seconds ./spec/services/account_reset/cancel_request_for_user_spec.rb:17
  AccountReset::DeleteAccount#call can be called even if DeletedUser exists
    0.95817 seconds ./spec/services/account_reset/delete_account_spec.rb:8
  UserAlerts::AlertUserAboutPasswordChange#call sends an email to all of the users confirmed email addresses
    0.94566 seconds ./spec/services/user_alerts/alert_user_about_password_change_spec.rb:5

Top 10 slowest example groups:
  UserAlerts::AlertUserAboutAccountVerified
    1.59 seconds average (1.59 seconds / 1 example) ./spec/services/user_alerts/alert_user_about_account_verified_spec.rb:3
  UserAlerts::AlertUserAboutPersonalKeySignIn
    1.28 seconds average (1.28 seconds / 1 example) ./spec/services/user_alerts/alert_user_about_personal_key_sign_in_spec.rb:3
  UserAlerts::AlertUserAboutPasswordChange
    0.94681 seconds average (0.94681 seconds / 1 example) ./spec/services/user_alerts/alert_user_about_password_change_spec.rb:3
  ResetUserPassword
    0.90444 seconds average (3.62 seconds / 4 examples) ./spec/services/reset_user_password_spec.rb:3
  UserAlerts::AlertUserAboutNewDevice
    0.80028 seconds average (0.80028 seconds / 1 example) ./spec/services/user_alerts/alert_user_about_new_device_spec.rb:3
  RequestPasswordReset
    0.61652 seconds average (6.17 seconds / 10 examples) ./spec/services/request_password_reset_spec.rb:3
  AccountReset::NotifyUserOfRequestCancellation
    0.61337 seconds average (1.23 seconds / 2 examples) ./spec/services/account_reset/notify_user_of_request_cancellation_spec.rb:3
  AccountReset::DeleteAccount
    0.57558 seconds average (1.15 seconds / 2 examples) ./spec/services/account_reset/delete_account_spec.rb:3
  AccountReset::CancelRequestForUser
    0.54232 seconds average (1.63 seconds / 3 examples) ./spec/services/account_reset/cancel_request_for_user_spec.rb:3
  AccountReset::CreateRequest
    0.50404 seconds average (1.01 seconds / 2 examples) ./spec/services/account_reset/create_request_spec.rb:3

Finished in 2 minutes 26.2 seconds (files took 3.24 seconds to load)
1564 examples, 2 failures, 1 pending

Failed examples:

rspec ./spec/services/frontend_logger_spec.rb:31 # FrontendLogger#track_event with unknown event logs with prefix for unknown event
rspec ./spec/services/frontend_logger_spec.rb:41 # FrontendLogger#track_event with method handler calls method with attributes based on signature

Randomized with seed 57671
